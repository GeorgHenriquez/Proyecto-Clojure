Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUAL
    NOTEQUAL
    GREATERTHAN
    LESSTHAN
    GREATERTHANEQUALS
    LESSTHANEQUALS
    QUESTION
    DOUBLE_POINT
    POINT
    PERCENTAJE
    AT
    EXCLAMATION
    DEFN
    NULL
    AND
    OR
    NOT
    IF
    ELSE
    WHILE
    DO
    FOR
    VECTOR
    FUNCTION_NTH

Grammar

Rule 0     S' -> stament
Rule 1     stament -> LPAREN compute RPAREN
Rule 2     stament -> vector
Rule 3     compute -> expression
Rule 4     compute -> function
Rule 5     function -> FUNCTION_PRINTLN STRING
Rule 6     function -> READLINE
Rule 7     function -> FUNCTION_EMPTY STRING
Rule 8     multiplestring -> STRING
Rule 9     multiplestring -> multiplestring STRING
Rule 10    function -> TYPE_STR multiplestring
Rule 11    function -> FUNCTION_SUB STRING NUMBER
Rule 12    function -> FUNCTION_SEQ STRING
Rule 13    multipleObjects -> value
Rule 14    multipleObjects -> value multipleObjects
Rule 15    multipleObjects -> sequential_colls
Rule 16    multipleObjects -> sequential_colls multipleObjects
Rule 17    value -> STRING
Rule 18    value -> NUMBER
Rule 19    value -> FLOAT
Rule 20    value -> BOOLEAN_TRUE
Rule 21    value -> BOOLEAN_FALSE
Rule 22    vector -> LBRACKET multipleObjects RBRACKET
Rule 23    function -> FUNCTION_GET sequential_colls NUMBER
Rule 24    function -> FUNCTION_COUNT sequential_colls
Rule 25    function -> FUNCTION_CONJ sequential_colls multipleObjects
Rule 26    assing -> DEF ID stament
Rule 27    list -> APOSTROPHE LPAREN multipleObjects RPAREN
Rule 28    list -> LPAREN LIST multipleObjects RPAREN
Rule 29    sequential_colls -> vector
Rule 30    sequential_colls -> set
Rule 31    sequential_colls -> list
Rule 32    sequential_colls -> ID
Rule 33    set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA
Rule 34    set -> LPAREN SET multipleObjects RPAREN
Rule 35    setFunctions_union -> SET DIVIDE UNION set set
Rule 36    setFunctions_difference -> SET DIVIDE DIFFERENCE set set
Rule 37    setFunctions_intersection -> SET DIVIDE INTERSECTION set set
Rule 38    function_take -> LPAREN TAKE NUMBER sequential_colls
Rule 39    function_drop -> LPAREN DROP NUMBER sequential_colls
Rule 40    expression -> expression PLUS term
Rule 41    expression -> expression MINUS term
Rule 42    expression -> term
Rule 43    term -> term TIMES factor
Rule 44    term -> term DIVIDE factor
Rule 45    term -> factor
Rule 46    factor -> NUMBER
Rule 47    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 
APOSTROPHE           : 27
AT                   : 
BOOLEAN_FALSE        : 21
BOOLEAN_TRUE         : 20
DEF                  : 26
DEFN                 : 
DIFFERENCE           : 36
DIVIDE               : 35 36 37 44
DO                   : 
DOUBLE_POINT         : 
DROP                 : 39
ELSE                 : 
EQUAL                : 
EXCLAMATION          : 
FLOAT                : 19
FOR                  : 
FUNCTION_CONJ        : 25
FUNCTION_COUNT       : 24
FUNCTION_EMPTY       : 7
FUNCTION_GET         : 23
FUNCTION_NTH         : 
FUNCTION_PRINTLN     : 5
FUNCTION_SEQ         : 12
FUNCTION_SUB         : 11
GREATERTHAN          : 
GREATERTHANEQUALS    : 
ID                   : 26 32
IF                   : 
INTERSECTION         : 37
LBRACKET             : 22
LCURLYBRA            : 33
LESSTHAN             : 
LESSTHANEQUALS       : 
LIST                 : 28
LPAREN               : 1 27 28 34 38 39 47
MINUS                : 41
NOT                  : 
NOTEQUAL             : 
NULL                 : 
NUMBER               : 11 18 23 38 39 46
OR                   : 
PERCENTAJE           : 
PLUS                 : 40
POINT                : 
QUESTION             : 
RBRACKET             : 22
RCURLYBRA            : 33
READLINE             : 6
RPAREN               : 1 27 28 34 47
SET                  : 34 35 36 37
SETDEF               : 33
STRING               : 5 7 8 9 11 12 17
TAKE                 : 38
TIMES                : 43
TYPE_STR             : 10
UNION                : 35
VECTOR               : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assing               : 
compute              : 1
expression           : 3 40 41 47
factor               : 43 44 45
function             : 4
function_drop        : 
function_take        : 
list                 : 31
multipleObjects      : 14 16 22 25 27 28 33 34
multiplestring       : 9 10
sequential_colls     : 15 16 23 24 25 38 39
set                  : 30 35 35 36 36 37 37
setFunctions_difference : 
setFunctions_intersection : 
setFunctions_union   : 
stament              : 26 0
term                 : 40 41 42 43 44
value                : 13 14
vector               : 2 29

Parsing method: LALR

state 0

    (0) S' -> . stament
    (1) stament -> . LPAREN compute RPAREN
    (2) stament -> . vector
    (22) vector -> . LBRACKET multipleObjects RBRACKET

    LPAREN          shift and go to state 2
    LBRACKET        shift and go to state 4

    stament                        shift and go to state 1
    vector                         shift and go to state 3

state 1

    (0) S' -> stament .



state 2

    (1) stament -> LPAREN . compute RPAREN
    (3) compute -> . expression
    (4) compute -> . function
    (40) expression -> . expression PLUS term
    (41) expression -> . expression MINUS term
    (42) expression -> . term
    (5) function -> . FUNCTION_PRINTLN STRING
    (6) function -> . READLINE
    (7) function -> . FUNCTION_EMPTY STRING
    (10) function -> . TYPE_STR multiplestring
    (11) function -> . FUNCTION_SUB STRING NUMBER
    (12) function -> . FUNCTION_SEQ STRING
    (23) function -> . FUNCTION_GET sequential_colls NUMBER
    (24) function -> . FUNCTION_COUNT sequential_colls
    (25) function -> . FUNCTION_CONJ sequential_colls multipleObjects
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    FUNCTION_PRINTLN shift and go to state 10
    READLINE        shift and go to state 11
    FUNCTION_EMPTY  shift and go to state 12
    TYPE_STR        shift and go to state 13
    FUNCTION_SUB    shift and go to state 14
    FUNCTION_SEQ    shift and go to state 16
    FUNCTION_GET    shift and go to state 17
    FUNCTION_COUNT  shift and go to state 18
    FUNCTION_CONJ   shift and go to state 19
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    compute                        shift and go to state 6
    expression                     shift and go to state 7
    function                       shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 20

state 3

    (2) stament -> vector .

    $end            reduce using rule 2 (stament -> vector .)


state 4

    (22) vector -> LBRACKET . multipleObjects RBRACKET
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    multipleObjects                shift and go to state 21
    value                          shift and go to state 22
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 5

    (47) factor -> LPAREN . expression RPAREN
    (40) expression -> . expression PLUS term
    (41) expression -> . expression MINUS term
    (42) expression -> . term
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    expression                     shift and go to state 36
    term                           shift and go to state 9
    factor                         shift and go to state 20

state 6

    (1) stament -> LPAREN compute . RPAREN

    RPAREN          shift and go to state 37


state 7

    (3) compute -> expression .
    (40) expression -> expression . PLUS term
    (41) expression -> expression . MINUS term

    RPAREN          reduce using rule 3 (compute -> expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39


state 8

    (4) compute -> function .

    RPAREN          reduce using rule 4 (compute -> function .)


state 9

    (42) expression -> term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor

    PLUS            reduce using rule 42 (expression -> term .)
    MINUS           reduce using rule 42 (expression -> term .)
    RPAREN          reduce using rule 42 (expression -> term .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 10

    (5) function -> FUNCTION_PRINTLN . STRING

    STRING          shift and go to state 42


state 11

    (6) function -> READLINE .

    RPAREN          reduce using rule 6 (function -> READLINE .)


state 12

    (7) function -> FUNCTION_EMPTY . STRING

    STRING          shift and go to state 43


state 13

    (10) function -> TYPE_STR . multiplestring
    (8) multiplestring -> . STRING
    (9) multiplestring -> . multiplestring STRING

    STRING          shift and go to state 45

    multiplestring                 shift and go to state 44

state 14

    (11) function -> FUNCTION_SUB . STRING NUMBER

    STRING          shift and go to state 46


state 15

    (46) factor -> NUMBER .

    TIMES           reduce using rule 46 (factor -> NUMBER .)
    DIVIDE          reduce using rule 46 (factor -> NUMBER .)
    PLUS            reduce using rule 46 (factor -> NUMBER .)
    MINUS           reduce using rule 46 (factor -> NUMBER .)
    RPAREN          reduce using rule 46 (factor -> NUMBER .)


state 16

    (12) function -> FUNCTION_SEQ . STRING

    STRING          shift and go to state 47


state 17

    (23) function -> FUNCTION_GET . sequential_colls NUMBER
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    sequential_colls               shift and go to state 48
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 18

    (24) function -> FUNCTION_COUNT . sequential_colls
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    sequential_colls               shift and go to state 49
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 19

    (25) function -> FUNCTION_CONJ . sequential_colls multipleObjects
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    sequential_colls               shift and go to state 50
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 20

    (45) term -> factor .

    TIMES           reduce using rule 45 (term -> factor .)
    DIVIDE          reduce using rule 45 (term -> factor .)
    PLUS            reduce using rule 45 (term -> factor .)
    MINUS           reduce using rule 45 (term -> factor .)
    RPAREN          reduce using rule 45 (term -> factor .)


state 21

    (22) vector -> LBRACKET multipleObjects . RBRACKET

    RBRACKET        shift and go to state 51


state 22

    (13) multipleObjects -> value .
    (14) multipleObjects -> value . multipleObjects
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    RBRACKET        reduce using rule 13 (multipleObjects -> value .)
    RPAREN          reduce using rule 13 (multipleObjects -> value .)
    RCURLYBRA       reduce using rule 13 (multipleObjects -> value .)
    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    value                          shift and go to state 22
    multipleObjects                shift and go to state 52
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 23

    (15) multipleObjects -> sequential_colls .
    (16) multipleObjects -> sequential_colls . multipleObjects
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    RBRACKET        reduce using rule 15 (multipleObjects -> sequential_colls .)
    RPAREN          reduce using rule 15 (multipleObjects -> sequential_colls .)
    RCURLYBRA       reduce using rule 15 (multipleObjects -> sequential_colls .)
    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    sequential_colls               shift and go to state 23
    multipleObjects                shift and go to state 53
    value                          shift and go to state 22
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 24

    (17) value -> STRING .

    STRING          reduce using rule 17 (value -> STRING .)
    NUMBER          reduce using rule 17 (value -> STRING .)
    FLOAT           reduce using rule 17 (value -> STRING .)
    BOOLEAN_TRUE    reduce using rule 17 (value -> STRING .)
    BOOLEAN_FALSE   reduce using rule 17 (value -> STRING .)
    ID              reduce using rule 17 (value -> STRING .)
    LBRACKET        reduce using rule 17 (value -> STRING .)
    SETDEF          reduce using rule 17 (value -> STRING .)
    LPAREN          reduce using rule 17 (value -> STRING .)
    APOSTROPHE      reduce using rule 17 (value -> STRING .)
    RBRACKET        reduce using rule 17 (value -> STRING .)
    RPAREN          reduce using rule 17 (value -> STRING .)
    RCURLYBRA       reduce using rule 17 (value -> STRING .)


state 25

    (18) value -> NUMBER .

    STRING          reduce using rule 18 (value -> NUMBER .)
    NUMBER          reduce using rule 18 (value -> NUMBER .)
    FLOAT           reduce using rule 18 (value -> NUMBER .)
    BOOLEAN_TRUE    reduce using rule 18 (value -> NUMBER .)
    BOOLEAN_FALSE   reduce using rule 18 (value -> NUMBER .)
    ID              reduce using rule 18 (value -> NUMBER .)
    LBRACKET        reduce using rule 18 (value -> NUMBER .)
    SETDEF          reduce using rule 18 (value -> NUMBER .)
    LPAREN          reduce using rule 18 (value -> NUMBER .)
    APOSTROPHE      reduce using rule 18 (value -> NUMBER .)
    RBRACKET        reduce using rule 18 (value -> NUMBER .)
    RPAREN          reduce using rule 18 (value -> NUMBER .)
    RCURLYBRA       reduce using rule 18 (value -> NUMBER .)


state 26

    (19) value -> FLOAT .

    STRING          reduce using rule 19 (value -> FLOAT .)
    NUMBER          reduce using rule 19 (value -> FLOAT .)
    FLOAT           reduce using rule 19 (value -> FLOAT .)
    BOOLEAN_TRUE    reduce using rule 19 (value -> FLOAT .)
    BOOLEAN_FALSE   reduce using rule 19 (value -> FLOAT .)
    ID              reduce using rule 19 (value -> FLOAT .)
    LBRACKET        reduce using rule 19 (value -> FLOAT .)
    SETDEF          reduce using rule 19 (value -> FLOAT .)
    LPAREN          reduce using rule 19 (value -> FLOAT .)
    APOSTROPHE      reduce using rule 19 (value -> FLOAT .)
    RBRACKET        reduce using rule 19 (value -> FLOAT .)
    RPAREN          reduce using rule 19 (value -> FLOAT .)
    RCURLYBRA       reduce using rule 19 (value -> FLOAT .)


state 27

    (20) value -> BOOLEAN_TRUE .

    STRING          reduce using rule 20 (value -> BOOLEAN_TRUE .)
    NUMBER          reduce using rule 20 (value -> BOOLEAN_TRUE .)
    FLOAT           reduce using rule 20 (value -> BOOLEAN_TRUE .)
    BOOLEAN_TRUE    reduce using rule 20 (value -> BOOLEAN_TRUE .)
    BOOLEAN_FALSE   reduce using rule 20 (value -> BOOLEAN_TRUE .)
    ID              reduce using rule 20 (value -> BOOLEAN_TRUE .)
    LBRACKET        reduce using rule 20 (value -> BOOLEAN_TRUE .)
    SETDEF          reduce using rule 20 (value -> BOOLEAN_TRUE .)
    LPAREN          reduce using rule 20 (value -> BOOLEAN_TRUE .)
    APOSTROPHE      reduce using rule 20 (value -> BOOLEAN_TRUE .)
    RBRACKET        reduce using rule 20 (value -> BOOLEAN_TRUE .)
    RPAREN          reduce using rule 20 (value -> BOOLEAN_TRUE .)
    RCURLYBRA       reduce using rule 20 (value -> BOOLEAN_TRUE .)


state 28

    (21) value -> BOOLEAN_FALSE .

    STRING          reduce using rule 21 (value -> BOOLEAN_FALSE .)
    NUMBER          reduce using rule 21 (value -> BOOLEAN_FALSE .)
    FLOAT           reduce using rule 21 (value -> BOOLEAN_FALSE .)
    BOOLEAN_TRUE    reduce using rule 21 (value -> BOOLEAN_FALSE .)
    BOOLEAN_FALSE   reduce using rule 21 (value -> BOOLEAN_FALSE .)
    ID              reduce using rule 21 (value -> BOOLEAN_FALSE .)
    LBRACKET        reduce using rule 21 (value -> BOOLEAN_FALSE .)
    SETDEF          reduce using rule 21 (value -> BOOLEAN_FALSE .)
    LPAREN          reduce using rule 21 (value -> BOOLEAN_FALSE .)
    APOSTROPHE      reduce using rule 21 (value -> BOOLEAN_FALSE .)
    RBRACKET        reduce using rule 21 (value -> BOOLEAN_FALSE .)
    RPAREN          reduce using rule 21 (value -> BOOLEAN_FALSE .)
    RCURLYBRA       reduce using rule 21 (value -> BOOLEAN_FALSE .)


state 29

    (29) sequential_colls -> vector .

    STRING          reduce using rule 29 (sequential_colls -> vector .)
    NUMBER          reduce using rule 29 (sequential_colls -> vector .)
    FLOAT           reduce using rule 29 (sequential_colls -> vector .)
    BOOLEAN_TRUE    reduce using rule 29 (sequential_colls -> vector .)
    BOOLEAN_FALSE   reduce using rule 29 (sequential_colls -> vector .)
    ID              reduce using rule 29 (sequential_colls -> vector .)
    LBRACKET        reduce using rule 29 (sequential_colls -> vector .)
    SETDEF          reduce using rule 29 (sequential_colls -> vector .)
    LPAREN          reduce using rule 29 (sequential_colls -> vector .)
    APOSTROPHE      reduce using rule 29 (sequential_colls -> vector .)
    RBRACKET        reduce using rule 29 (sequential_colls -> vector .)
    RPAREN          reduce using rule 29 (sequential_colls -> vector .)
    RCURLYBRA       reduce using rule 29 (sequential_colls -> vector .)


state 30

    (30) sequential_colls -> set .

    STRING          reduce using rule 30 (sequential_colls -> set .)
    NUMBER          reduce using rule 30 (sequential_colls -> set .)
    FLOAT           reduce using rule 30 (sequential_colls -> set .)
    BOOLEAN_TRUE    reduce using rule 30 (sequential_colls -> set .)
    BOOLEAN_FALSE   reduce using rule 30 (sequential_colls -> set .)
    ID              reduce using rule 30 (sequential_colls -> set .)
    LBRACKET        reduce using rule 30 (sequential_colls -> set .)
    SETDEF          reduce using rule 30 (sequential_colls -> set .)
    LPAREN          reduce using rule 30 (sequential_colls -> set .)
    APOSTROPHE      reduce using rule 30 (sequential_colls -> set .)
    RBRACKET        reduce using rule 30 (sequential_colls -> set .)
    RPAREN          reduce using rule 30 (sequential_colls -> set .)
    RCURLYBRA       reduce using rule 30 (sequential_colls -> set .)


state 31

    (31) sequential_colls -> list .

    STRING          reduce using rule 31 (sequential_colls -> list .)
    NUMBER          reduce using rule 31 (sequential_colls -> list .)
    FLOAT           reduce using rule 31 (sequential_colls -> list .)
    BOOLEAN_TRUE    reduce using rule 31 (sequential_colls -> list .)
    BOOLEAN_FALSE   reduce using rule 31 (sequential_colls -> list .)
    ID              reduce using rule 31 (sequential_colls -> list .)
    LBRACKET        reduce using rule 31 (sequential_colls -> list .)
    SETDEF          reduce using rule 31 (sequential_colls -> list .)
    LPAREN          reduce using rule 31 (sequential_colls -> list .)
    APOSTROPHE      reduce using rule 31 (sequential_colls -> list .)
    RBRACKET        reduce using rule 31 (sequential_colls -> list .)
    RPAREN          reduce using rule 31 (sequential_colls -> list .)
    RCURLYBRA       reduce using rule 31 (sequential_colls -> list .)


state 32

    (32) sequential_colls -> ID .

    STRING          reduce using rule 32 (sequential_colls -> ID .)
    NUMBER          reduce using rule 32 (sequential_colls -> ID .)
    FLOAT           reduce using rule 32 (sequential_colls -> ID .)
    BOOLEAN_TRUE    reduce using rule 32 (sequential_colls -> ID .)
    BOOLEAN_FALSE   reduce using rule 32 (sequential_colls -> ID .)
    ID              reduce using rule 32 (sequential_colls -> ID .)
    LBRACKET        reduce using rule 32 (sequential_colls -> ID .)
    SETDEF          reduce using rule 32 (sequential_colls -> ID .)
    LPAREN          reduce using rule 32 (sequential_colls -> ID .)
    APOSTROPHE      reduce using rule 32 (sequential_colls -> ID .)
    RBRACKET        reduce using rule 32 (sequential_colls -> ID .)
    RPAREN          reduce using rule 32 (sequential_colls -> ID .)
    RCURLYBRA       reduce using rule 32 (sequential_colls -> ID .)


state 33

    (33) set -> SETDEF . LCURLYBRA multipleObjects RCURLYBRA

    LCURLYBRA       shift and go to state 54


state 34

    (34) set -> LPAREN . SET multipleObjects RPAREN
    (28) list -> LPAREN . LIST multipleObjects RPAREN

    SET             shift and go to state 55
    LIST            shift and go to state 56


state 35

    (27) list -> APOSTROPHE . LPAREN multipleObjects RPAREN

    LPAREN          shift and go to state 57


state 36

    (47) factor -> LPAREN expression . RPAREN
    (40) expression -> expression . PLUS term
    (41) expression -> expression . MINUS term

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39


state 37

    (1) stament -> LPAREN compute RPAREN .

    $end            reduce using rule 1 (stament -> LPAREN compute RPAREN .)


state 38

    (40) expression -> expression PLUS . term
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    term                           shift and go to state 59
    factor                         shift and go to state 20

state 39

    (41) expression -> expression MINUS . term
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    term                           shift and go to state 60
    factor                         shift and go to state 20

state 40

    (43) term -> term TIMES . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    factor                         shift and go to state 61

state 41

    (44) term -> term DIVIDE . factor
    (46) factor -> . NUMBER
    (47) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 5

    factor                         shift and go to state 62

state 42

    (5) function -> FUNCTION_PRINTLN STRING .

    RPAREN          reduce using rule 5 (function -> FUNCTION_PRINTLN STRING .)


state 43

    (7) function -> FUNCTION_EMPTY STRING .

    RPAREN          reduce using rule 7 (function -> FUNCTION_EMPTY STRING .)


state 44

    (10) function -> TYPE_STR multiplestring .
    (9) multiplestring -> multiplestring . STRING

    RPAREN          reduce using rule 10 (function -> TYPE_STR multiplestring .)
    STRING          shift and go to state 63


state 45

    (8) multiplestring -> STRING .

    STRING          reduce using rule 8 (multiplestring -> STRING .)
    RPAREN          reduce using rule 8 (multiplestring -> STRING .)


state 46

    (11) function -> FUNCTION_SUB STRING . NUMBER

    NUMBER          shift and go to state 64


state 47

    (12) function -> FUNCTION_SEQ STRING .

    RPAREN          reduce using rule 12 (function -> FUNCTION_SEQ STRING .)


state 48

    (23) function -> FUNCTION_GET sequential_colls . NUMBER

    NUMBER          shift and go to state 65


state 49

    (24) function -> FUNCTION_COUNT sequential_colls .

    RPAREN          reduce using rule 24 (function -> FUNCTION_COUNT sequential_colls .)


state 50

    (25) function -> FUNCTION_CONJ sequential_colls . multipleObjects
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    sequential_colls               shift and go to state 23
    multipleObjects                shift and go to state 66
    value                          shift and go to state 22
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 51

    (22) vector -> LBRACKET multipleObjects RBRACKET .

    $end            reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    STRING          reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    NUMBER          reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    FLOAT           reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    BOOLEAN_TRUE    reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    BOOLEAN_FALSE   reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    ID              reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    LBRACKET        reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    SETDEF          reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    LPAREN          reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    APOSTROPHE      reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    RBRACKET        reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    RPAREN          reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)
    RCURLYBRA       reduce using rule 22 (vector -> LBRACKET multipleObjects RBRACKET .)


state 52

    (14) multipleObjects -> value multipleObjects .

    RBRACKET        reduce using rule 14 (multipleObjects -> value multipleObjects .)
    RPAREN          reduce using rule 14 (multipleObjects -> value multipleObjects .)
    RCURLYBRA       reduce using rule 14 (multipleObjects -> value multipleObjects .)


state 53

    (16) multipleObjects -> sequential_colls multipleObjects .

    RBRACKET        reduce using rule 16 (multipleObjects -> sequential_colls multipleObjects .)
    RPAREN          reduce using rule 16 (multipleObjects -> sequential_colls multipleObjects .)
    RCURLYBRA       reduce using rule 16 (multipleObjects -> sequential_colls multipleObjects .)


state 54

    (33) set -> SETDEF LCURLYBRA . multipleObjects RCURLYBRA
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    multipleObjects                shift and go to state 67
    value                          shift and go to state 22
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 55

    (34) set -> LPAREN SET . multipleObjects RPAREN
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    multipleObjects                shift and go to state 68
    value                          shift and go to state 22
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 56

    (28) list -> LPAREN LIST . multipleObjects RPAREN
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    multipleObjects                shift and go to state 69
    value                          shift and go to state 22
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 57

    (27) list -> APOSTROPHE LPAREN . multipleObjects RPAREN
    (13) multipleObjects -> . value
    (14) multipleObjects -> . value multipleObjects
    (15) multipleObjects -> . sequential_colls
    (16) multipleObjects -> . sequential_colls multipleObjects
    (17) value -> . STRING
    (18) value -> . NUMBER
    (19) value -> . FLOAT
    (20) value -> . BOOLEAN_TRUE
    (21) value -> . BOOLEAN_FALSE
    (29) sequential_colls -> . vector
    (30) sequential_colls -> . set
    (31) sequential_colls -> . list
    (32) sequential_colls -> . ID
    (22) vector -> . LBRACKET multipleObjects RBRACKET
    (33) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (34) set -> . LPAREN SET multipleObjects RPAREN
    (27) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (28) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 24
    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26
    BOOLEAN_TRUE    shift and go to state 27
    BOOLEAN_FALSE   shift and go to state 28
    ID              shift and go to state 32
    LBRACKET        shift and go to state 4
    SETDEF          shift and go to state 33
    LPAREN          shift and go to state 34
    APOSTROPHE      shift and go to state 35

    multipleObjects                shift and go to state 70
    value                          shift and go to state 22
    sequential_colls               shift and go to state 23
    vector                         shift and go to state 29
    set                            shift and go to state 30
    list                           shift and go to state 31

state 58

    (47) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (factor -> LPAREN expression RPAREN .)


state 59

    (40) expression -> expression PLUS term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor

    PLUS            reduce using rule 40 (expression -> expression PLUS term .)
    MINUS           reduce using rule 40 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 40 (expression -> expression PLUS term .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 60

    (41) expression -> expression MINUS term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor

    PLUS            reduce using rule 41 (expression -> expression MINUS term .)
    MINUS           reduce using rule 41 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 41 (expression -> expression MINUS term .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 61

    (43) term -> term TIMES factor .

    TIMES           reduce using rule 43 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 43 (term -> term TIMES factor .)
    PLUS            reduce using rule 43 (term -> term TIMES factor .)
    MINUS           reduce using rule 43 (term -> term TIMES factor .)
    RPAREN          reduce using rule 43 (term -> term TIMES factor .)


state 62

    (44) term -> term DIVIDE factor .

    TIMES           reduce using rule 44 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 44 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 44 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 44 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 44 (term -> term DIVIDE factor .)


state 63

    (9) multiplestring -> multiplestring STRING .

    STRING          reduce using rule 9 (multiplestring -> multiplestring STRING .)
    RPAREN          reduce using rule 9 (multiplestring -> multiplestring STRING .)


state 64

    (11) function -> FUNCTION_SUB STRING NUMBER .

    RPAREN          reduce using rule 11 (function -> FUNCTION_SUB STRING NUMBER .)


state 65

    (23) function -> FUNCTION_GET sequential_colls NUMBER .

    RPAREN          reduce using rule 23 (function -> FUNCTION_GET sequential_colls NUMBER .)


state 66

    (25) function -> FUNCTION_CONJ sequential_colls multipleObjects .

    RPAREN          reduce using rule 25 (function -> FUNCTION_CONJ sequential_colls multipleObjects .)


state 67

    (33) set -> SETDEF LCURLYBRA multipleObjects . RCURLYBRA

    RCURLYBRA       shift and go to state 71


state 68

    (34) set -> LPAREN SET multipleObjects . RPAREN

    RPAREN          shift and go to state 72


state 69

    (28) list -> LPAREN LIST multipleObjects . RPAREN

    RPAREN          shift and go to state 73


state 70

    (27) list -> APOSTROPHE LPAREN multipleObjects . RPAREN

    RPAREN          shift and go to state 74


state 71

    (33) set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .

    STRING          reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    NUMBER          reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    FLOAT           reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    BOOLEAN_TRUE    reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    BOOLEAN_FALSE   reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    ID              reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    LBRACKET        reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    SETDEF          reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    LPAREN          reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    APOSTROPHE      reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RBRACKET        reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RPAREN          reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RCURLYBRA       reduce using rule 33 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)


state 72

    (34) set -> LPAREN SET multipleObjects RPAREN .

    STRING          reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    NUMBER          reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    FLOAT           reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    ID              reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    LBRACKET        reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    SETDEF          reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    LPAREN          reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    RBRACKET        reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    RPAREN          reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 34 (set -> LPAREN SET multipleObjects RPAREN .)


state 73

    (28) list -> LPAREN LIST multipleObjects RPAREN .

    STRING          reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    NUMBER          reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    FLOAT           reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    ID              reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    LBRACKET        reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    SETDEF          reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    LPAREN          reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    RBRACKET        reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    RPAREN          reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 28 (list -> LPAREN LIST multipleObjects RPAREN .)


state 74

    (27) list -> APOSTROPHE LPAREN multipleObjects RPAREN .

    STRING          reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    NUMBER          reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    FLOAT           reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    ID              reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    LBRACKET        reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    SETDEF          reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    LPAREN          reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RBRACKET        reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RPAREN          reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 27 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)


Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AT
    DEFN
    DOUBLE_POINT
    ELSE
    EXCLAMATION
    FUNCTION_NTH
    PERCENTAJE
    POINT
    QUESTION

Grammar

Rule 0     S' -> stament
Rule 1     stament -> LPAREN compute RPAREN
Rule 2     compute -> function
Rule 3     compute -> general_expression
Rule 4     compute -> control_structure code_block
Rule 5     compute -> while
Rule 6     code_block -> LPAREN function RPAREN
Rule 7     code_block -> LPAREN general_expression RPAREN
Rule 8     code_block -> LPAREN function RPAREN code_block
Rule 9     code_block -> LPAREN general_expression RPAREN code_block
Rule 10    function -> FUNCTION_PRINTLN multipleObjects
Rule 11    function -> READLINE
Rule 12    function -> FUNCTION_EMPTY STRING
Rule 13    multiplestring -> STRING
Rule 14    multiplestring -> STRING multiplestring
Rule 15    multiplestring -> stament
Rule 16    multiplestring -> stament multiplestring
Rule 17    function -> TYPE_STR multiplestring
Rule 18    function -> FUNCTION_SUB STRING NUMBER
Rule 19    function -> FUNCTION_SUB ID NUMBER
Rule 20    function -> FUNCTION_SEQ STRING
Rule 21    function -> FUNCTION_SEQ ID
Rule 22    multipleObjects -> value
Rule 23    multipleObjects -> value multipleObjects
Rule 24    multipleObjects -> sequential_colls
Rule 25    multipleObjects -> sequential_colls multipleObjects
Rule 26    value -> STRING
Rule 27    value -> NUMBER
Rule 28    value -> FLOAT
Rule 29    value -> BOOLEAN_TRUE
Rule 30    value -> BOOLEAN_FALSE
Rule 31    value -> NULL
Rule 32    vector -> LBRACKET multipleObjects RBRACKET
Rule 33    vector -> LPAREN VECTOR multipleObjects RPAREN
Rule 34    function -> FUNCTION_GET sequential_colls NUMBER
Rule 35    function -> FUNCTION_COUNT sequential_colls
Rule 36    function -> FUNCTION_CONJ sequential_colls multipleObjects
Rule 37    list -> APOSTROPHE LPAREN multipleObjects RPAREN
Rule 38    list -> LPAREN LIST multipleObjects RPAREN
Rule 39    sequential_colls -> vector
Rule 40    sequential_colls -> set
Rule 41    sequential_colls -> list
Rule 42    sequential_colls -> ID
Rule 43    set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA
Rule 44    set -> LPAREN SET multipleObjects RPAREN
Rule 45    setFunctions_union -> SET DIVIDE UNION set set
Rule 46    setFunctions_difference -> SET DIVIDE DIFFERENCE set set
Rule 47    setFunctions_intersection -> SET DIVIDE INTERSECTION set set
Rule 48    function_take -> TAKE NUMBER sequential_colls
Rule 49    function_drop -> DROP NUMBER sequential_colls
Rule 50    general_expression -> math_operation
Rule 51    general_expression -> boolean_operation
Rule 52    general_expression -> variable_expression
Rule 53    general_expression -> setFunctions_union
Rule 54    general_expression -> setFunctions_intersection
Rule 55    general_expression -> setFunctions_difference
Rule 56    general_expression -> function_take
Rule 57    general_expression -> function_drop
Rule 58    num_expression -> LPAREN math_operation RPAREN
Rule 59    math_operation -> PLUS num_expression num_expression
Rule 60    math_operation -> MINUS num_expression num_expression
Rule 61    math_operation -> DIVIDE num_expression num_expression
Rule 62    math_operation -> TIMES num_expression num_expression
Rule 63    num_expression -> NUMBER
Rule 64    num_expression -> ID
Rule 65    boolean_operation -> bool_operation
Rule 66    boolean_operation -> compare_operation
Rule 67    bool_expression -> LPAREN bool_operation RPAREN
Rule 68    bool_operation -> AND bool_expression bool_expression
Rule 69    bool_operation -> OR bool_expression bool_expression
Rule 70    bool_operation -> NOT bool_expression
Rule 71    bool_expression -> BOOLEAN_TRUE
Rule 72    bool_expression -> BOOLEAN_FALSE
Rule 73    bool_expression -> ID
Rule 74    compare_operation -> GREATERTHAN num_expression num_expression
Rule 75    compare_operation -> LESSTHAN num_expression num_expression
Rule 76    compare_operation -> GREATERTHANEQUALS num_expression num_expression
Rule 77    compare_operation -> LESSTHANEQUALS num_expression num_expression
Rule 78    compare_operation -> EQUAL num_expression num_expression
Rule 79    compare_operation -> NOTEQUAL num_expression num_expression
Rule 80    variable_expression -> DEF ID value
Rule 81    variable_expression -> DEF ID sequential_colls
Rule 82    variable_expression -> DEF ID stament
Rule 83    control_structure -> if
Rule 84    control_structure -> for
Rule 85    for -> FOR LBRACKET ID sequential_colls RBRACKET
Rule 86    for -> FOR LBRACKET ID ID RBRACKET
Rule 87    while -> WHILE LPAREN boolean_operation RPAREN do
Rule 88    do -> LPAREN DO code_block RPAREN
Rule 89    if -> IF LPAREN boolean_operation RPAREN

Terminals, with rules where they appear

AND                  : 68
APOSTROPHE           : 37
AT                   : 
BOOLEAN_FALSE        : 30 72
BOOLEAN_TRUE         : 29 71
DEF                  : 80 81 82
DEFN                 : 
DIFFERENCE           : 46
DIVIDE               : 45 46 47 61
DO                   : 88
DOUBLE_POINT         : 
DROP                 : 49
ELSE                 : 
EQUAL                : 78
EXCLAMATION          : 
FLOAT                : 28
FOR                  : 85 86
FUNCTION_CONJ        : 36
FUNCTION_COUNT       : 35
FUNCTION_EMPTY       : 12
FUNCTION_GET         : 34
FUNCTION_NTH         : 
FUNCTION_PRINTLN     : 10
FUNCTION_SEQ         : 20 21
FUNCTION_SUB         : 18 19
GREATERTHAN          : 74
GREATERTHANEQUALS    : 76
ID                   : 19 21 42 64 73 80 81 82 85 86 86
IF                   : 89
INTERSECTION         : 47
LBRACKET             : 32 85 86
LCURLYBRA            : 43
LESSTHAN             : 75
LESSTHANEQUALS       : 77
LIST                 : 38
LPAREN               : 1 6 7 8 9 33 37 38 44 58 67 87 88 89
MINUS                : 60
NOT                  : 70
NOTEQUAL             : 79
NULL                 : 31
NUMBER               : 18 19 27 34 48 49 63
OR                   : 69
PERCENTAJE           : 
PLUS                 : 59
POINT                : 
QUESTION             : 
RBRACKET             : 32 85 86
RCURLYBRA            : 43
READLINE             : 11
RPAREN               : 1 6 7 8 9 33 37 38 44 58 67 87 88 89
SET                  : 44 45 46 47
SETDEF               : 43
STRING               : 12 13 14 18 20 26
TAKE                 : 48
TIMES                : 62
TYPE_STR             : 17
UNION                : 45
VECTOR               : 33
WHILE                : 87
error                : 

Nonterminals, with rules where they appear

bool_expression      : 68 68 69 69 70
bool_operation       : 65 67
boolean_operation    : 51 87 89
code_block           : 4 8 9 88
compare_operation    : 66
compute              : 1
control_structure    : 4
do                   : 87
for                  : 84
function             : 2 6 8
function_drop        : 57
function_take        : 56
general_expression   : 3 7 9
if                   : 83
list                 : 41
math_operation       : 50 58
multipleObjects      : 10 23 25 32 33 36 37 38 43 44
multiplestring       : 14 16 17
num_expression       : 59 59 60 60 61 61 62 62 74 74 75 75 76 76 77 77 78 78 79 79
sequential_colls     : 24 25 34 35 36 48 49 81 85
set                  : 40 45 45 46 46 47 47
setFunctions_difference : 55
setFunctions_intersection : 54
setFunctions_union   : 53
stament              : 15 16 82 0
value                : 22 23 80
variable_expression  : 52
vector               : 39
while                : 5

Parsing method: LALR

state 0

    (0) S' -> . stament
    (1) stament -> . LPAREN compute RPAREN

    LPAREN          shift and go to state 2

    stament                        shift and go to state 1

state 1

    (0) S' -> stament .



state 2

    (1) stament -> LPAREN . compute RPAREN
    (2) compute -> . function
    (3) compute -> . general_expression
    (4) compute -> . control_structure code_block
    (5) compute -> . while
    (10) function -> . FUNCTION_PRINTLN multipleObjects
    (11) function -> . READLINE
    (12) function -> . FUNCTION_EMPTY STRING
    (17) function -> . TYPE_STR multiplestring
    (18) function -> . FUNCTION_SUB STRING NUMBER
    (19) function -> . FUNCTION_SUB ID NUMBER
    (20) function -> . FUNCTION_SEQ STRING
    (21) function -> . FUNCTION_SEQ ID
    (34) function -> . FUNCTION_GET sequential_colls NUMBER
    (35) function -> . FUNCTION_COUNT sequential_colls
    (36) function -> . FUNCTION_CONJ sequential_colls multipleObjects
    (50) general_expression -> . math_operation
    (51) general_expression -> . boolean_operation
    (52) general_expression -> . variable_expression
    (53) general_expression -> . setFunctions_union
    (54) general_expression -> . setFunctions_intersection
    (55) general_expression -> . setFunctions_difference
    (56) general_expression -> . function_take
    (57) general_expression -> . function_drop
    (83) control_structure -> . if
    (84) control_structure -> . for
    (87) while -> . WHILE LPAREN boolean_operation RPAREN do
    (59) math_operation -> . PLUS num_expression num_expression
    (60) math_operation -> . MINUS num_expression num_expression
    (61) math_operation -> . DIVIDE num_expression num_expression
    (62) math_operation -> . TIMES num_expression num_expression
    (65) boolean_operation -> . bool_operation
    (66) boolean_operation -> . compare_operation
    (80) variable_expression -> . DEF ID value
    (81) variable_expression -> . DEF ID sequential_colls
    (82) variable_expression -> . DEF ID stament
    (45) setFunctions_union -> . SET DIVIDE UNION set set
    (47) setFunctions_intersection -> . SET DIVIDE INTERSECTION set set
    (46) setFunctions_difference -> . SET DIVIDE DIFFERENCE set set
    (48) function_take -> . TAKE NUMBER sequential_colls
    (49) function_drop -> . DROP NUMBER sequential_colls
    (89) if -> . IF LPAREN boolean_operation RPAREN
    (85) for -> . FOR LBRACKET ID sequential_colls RBRACKET
    (86) for -> . FOR LBRACKET ID ID RBRACKET
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression
    (74) compare_operation -> . GREATERTHAN num_expression num_expression
    (75) compare_operation -> . LESSTHAN num_expression num_expression
    (76) compare_operation -> . GREATERTHANEQUALS num_expression num_expression
    (77) compare_operation -> . LESSTHANEQUALS num_expression num_expression
    (78) compare_operation -> . EQUAL num_expression num_expression
    (79) compare_operation -> . NOTEQUAL num_expression num_expression

    FUNCTION_PRINTLN shift and go to state 8
    READLINE        shift and go to state 9
    FUNCTION_EMPTY  shift and go to state 10
    TYPE_STR        shift and go to state 11
    FUNCTION_SUB    shift and go to state 12
    FUNCTION_SEQ    shift and go to state 13
    FUNCTION_GET    shift and go to state 14
    FUNCTION_COUNT  shift and go to state 15
    FUNCTION_CONJ   shift and go to state 16
    WHILE           shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    TIMES           shift and go to state 31
    DEF             shift and go to state 34
    SET             shift and go to state 35
    TAKE            shift and go to state 36
    DROP            shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42
    GREATERTHAN     shift and go to state 43
    LESSTHAN        shift and go to state 44
    GREATERTHANEQUALS shift and go to state 45
    LESSTHANEQUALS  shift and go to state 46
    EQUAL           shift and go to state 47
    NOTEQUAL        shift and go to state 48

    compute                        shift and go to state 3
    function                       shift and go to state 4
    general_expression             shift and go to state 5
    control_structure              shift and go to state 6
    while                          shift and go to state 7
    math_operation                 shift and go to state 17
    boolean_operation              shift and go to state 18
    variable_expression            shift and go to state 19
    setFunctions_union             shift and go to state 20
    setFunctions_intersection      shift and go to state 21
    setFunctions_difference        shift and go to state 22
    function_take                  shift and go to state 23
    function_drop                  shift and go to state 24
    if                             shift and go to state 25
    for                            shift and go to state 26
    bool_operation                 shift and go to state 32
    compare_operation              shift and go to state 33

state 3

    (1) stament -> LPAREN compute . RPAREN

    RPAREN          shift and go to state 49


state 4

    (2) compute -> function .

    RPAREN          reduce using rule 2 (compute -> function .)


state 5

    (3) compute -> general_expression .

    RPAREN          reduce using rule 3 (compute -> general_expression .)


state 6

    (4) compute -> control_structure . code_block
    (6) code_block -> . LPAREN function RPAREN
    (7) code_block -> . LPAREN general_expression RPAREN
    (8) code_block -> . LPAREN function RPAREN code_block
    (9) code_block -> . LPAREN general_expression RPAREN code_block

    LPAREN          shift and go to state 51

    code_block                     shift and go to state 50

state 7

    (5) compute -> while .

    RPAREN          reduce using rule 5 (compute -> while .)


state 8

    (10) function -> FUNCTION_PRINTLN . multipleObjects
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 52
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 9

    (11) function -> READLINE .

    RPAREN          reduce using rule 11 (function -> READLINE .)


state 10

    (12) function -> FUNCTION_EMPTY . STRING

    STRING          shift and go to state 69


state 11

    (17) function -> TYPE_STR . multiplestring
    (13) multiplestring -> . STRING
    (14) multiplestring -> . STRING multiplestring
    (15) multiplestring -> . stament
    (16) multiplestring -> . stament multiplestring
    (1) stament -> . LPAREN compute RPAREN

    STRING          shift and go to state 71
    LPAREN          shift and go to state 2

    multiplestring                 shift and go to state 70
    stament                        shift and go to state 72

state 12

    (18) function -> FUNCTION_SUB . STRING NUMBER
    (19) function -> FUNCTION_SUB . ID NUMBER

    STRING          shift and go to state 73
    ID              shift and go to state 74


state 13

    (20) function -> FUNCTION_SEQ . STRING
    (21) function -> FUNCTION_SEQ . ID

    STRING          shift and go to state 75
    ID              shift and go to state 76


state 14

    (34) function -> FUNCTION_GET . sequential_colls NUMBER
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 77
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 15

    (35) function -> FUNCTION_COUNT . sequential_colls
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 78
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 16

    (36) function -> FUNCTION_CONJ . sequential_colls multipleObjects
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 79
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 17

    (50) general_expression -> math_operation .

    RPAREN          reduce using rule 50 (general_expression -> math_operation .)


state 18

    (51) general_expression -> boolean_operation .

    RPAREN          reduce using rule 51 (general_expression -> boolean_operation .)


state 19

    (52) general_expression -> variable_expression .

    RPAREN          reduce using rule 52 (general_expression -> variable_expression .)


state 20

    (53) general_expression -> setFunctions_union .

    RPAREN          reduce using rule 53 (general_expression -> setFunctions_union .)


state 21

    (54) general_expression -> setFunctions_intersection .

    RPAREN          reduce using rule 54 (general_expression -> setFunctions_intersection .)


state 22

    (55) general_expression -> setFunctions_difference .

    RPAREN          reduce using rule 55 (general_expression -> setFunctions_difference .)


state 23

    (56) general_expression -> function_take .

    RPAREN          reduce using rule 56 (general_expression -> function_take .)


state 24

    (57) general_expression -> function_drop .

    RPAREN          reduce using rule 57 (general_expression -> function_drop .)


state 25

    (83) control_structure -> if .

    LPAREN          reduce using rule 83 (control_structure -> if .)


state 26

    (84) control_structure -> for .

    LPAREN          reduce using rule 84 (control_structure -> for .)


state 27

    (87) while -> WHILE . LPAREN boolean_operation RPAREN do

    LPAREN          shift and go to state 80


state 28

    (59) math_operation -> PLUS . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 81

state 29

    (60) math_operation -> MINUS . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 85

state 30

    (61) math_operation -> DIVIDE . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 86

state 31

    (62) math_operation -> TIMES . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 87

state 32

    (65) boolean_operation -> bool_operation .

    RPAREN          reduce using rule 65 (boolean_operation -> bool_operation .)


state 33

    (66) boolean_operation -> compare_operation .

    RPAREN          reduce using rule 66 (boolean_operation -> compare_operation .)


state 34

    (80) variable_expression -> DEF . ID value
    (81) variable_expression -> DEF . ID sequential_colls
    (82) variable_expression -> DEF . ID stament

    ID              shift and go to state 88


state 35

    (45) setFunctions_union -> SET . DIVIDE UNION set set
    (47) setFunctions_intersection -> SET . DIVIDE INTERSECTION set set
    (46) setFunctions_difference -> SET . DIVIDE DIFFERENCE set set

    DIVIDE          shift and go to state 89


state 36

    (48) function_take -> TAKE . NUMBER sequential_colls

    NUMBER          shift and go to state 90


state 37

    (49) function_drop -> DROP . NUMBER sequential_colls

    NUMBER          shift and go to state 91


state 38

    (89) if -> IF . LPAREN boolean_operation RPAREN

    LPAREN          shift and go to state 92


state 39

    (85) for -> FOR . LBRACKET ID sequential_colls RBRACKET
    (86) for -> FOR . LBRACKET ID ID RBRACKET

    LBRACKET        shift and go to state 93


state 40

    (68) bool_operation -> AND . bool_expression bool_expression
    (67) bool_expression -> . LPAREN bool_operation RPAREN
    (71) bool_expression -> . BOOLEAN_TRUE
    (72) bool_expression -> . BOOLEAN_FALSE
    (73) bool_expression -> . ID

    LPAREN          shift and go to state 95
    BOOLEAN_TRUE    shift and go to state 96
    BOOLEAN_FALSE   shift and go to state 97
    ID              shift and go to state 98

    bool_expression                shift and go to state 94

state 41

    (69) bool_operation -> OR . bool_expression bool_expression
    (67) bool_expression -> . LPAREN bool_operation RPAREN
    (71) bool_expression -> . BOOLEAN_TRUE
    (72) bool_expression -> . BOOLEAN_FALSE
    (73) bool_expression -> . ID

    LPAREN          shift and go to state 95
    BOOLEAN_TRUE    shift and go to state 96
    BOOLEAN_FALSE   shift and go to state 97
    ID              shift and go to state 98

    bool_expression                shift and go to state 99

state 42

    (70) bool_operation -> NOT . bool_expression
    (67) bool_expression -> . LPAREN bool_operation RPAREN
    (71) bool_expression -> . BOOLEAN_TRUE
    (72) bool_expression -> . BOOLEAN_FALSE
    (73) bool_expression -> . ID

    LPAREN          shift and go to state 95
    BOOLEAN_TRUE    shift and go to state 96
    BOOLEAN_FALSE   shift and go to state 97
    ID              shift and go to state 98

    bool_expression                shift and go to state 100

state 43

    (74) compare_operation -> GREATERTHAN . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 101

state 44

    (75) compare_operation -> LESSTHAN . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 102

state 45

    (76) compare_operation -> GREATERTHANEQUALS . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 103

state 46

    (77) compare_operation -> LESSTHANEQUALS . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 104

state 47

    (78) compare_operation -> EQUAL . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 105

state 48

    (79) compare_operation -> NOTEQUAL . num_expression num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 106

state 49

    (1) stament -> LPAREN compute RPAREN .

    $end            reduce using rule 1 (stament -> LPAREN compute RPAREN .)
    STRING          reduce using rule 1 (stament -> LPAREN compute RPAREN .)
    LPAREN          reduce using rule 1 (stament -> LPAREN compute RPAREN .)
    RPAREN          reduce using rule 1 (stament -> LPAREN compute RPAREN .)


state 50

    (4) compute -> control_structure code_block .

    RPAREN          reduce using rule 4 (compute -> control_structure code_block .)


state 51

    (6) code_block -> LPAREN . function RPAREN
    (7) code_block -> LPAREN . general_expression RPAREN
    (8) code_block -> LPAREN . function RPAREN code_block
    (9) code_block -> LPAREN . general_expression RPAREN code_block
    (10) function -> . FUNCTION_PRINTLN multipleObjects
    (11) function -> . READLINE
    (12) function -> . FUNCTION_EMPTY STRING
    (17) function -> . TYPE_STR multiplestring
    (18) function -> . FUNCTION_SUB STRING NUMBER
    (19) function -> . FUNCTION_SUB ID NUMBER
    (20) function -> . FUNCTION_SEQ STRING
    (21) function -> . FUNCTION_SEQ ID
    (34) function -> . FUNCTION_GET sequential_colls NUMBER
    (35) function -> . FUNCTION_COUNT sequential_colls
    (36) function -> . FUNCTION_CONJ sequential_colls multipleObjects
    (50) general_expression -> . math_operation
    (51) general_expression -> . boolean_operation
    (52) general_expression -> . variable_expression
    (53) general_expression -> . setFunctions_union
    (54) general_expression -> . setFunctions_intersection
    (55) general_expression -> . setFunctions_difference
    (56) general_expression -> . function_take
    (57) general_expression -> . function_drop
    (59) math_operation -> . PLUS num_expression num_expression
    (60) math_operation -> . MINUS num_expression num_expression
    (61) math_operation -> . DIVIDE num_expression num_expression
    (62) math_operation -> . TIMES num_expression num_expression
    (65) boolean_operation -> . bool_operation
    (66) boolean_operation -> . compare_operation
    (80) variable_expression -> . DEF ID value
    (81) variable_expression -> . DEF ID sequential_colls
    (82) variable_expression -> . DEF ID stament
    (45) setFunctions_union -> . SET DIVIDE UNION set set
    (47) setFunctions_intersection -> . SET DIVIDE INTERSECTION set set
    (46) setFunctions_difference -> . SET DIVIDE DIFFERENCE set set
    (48) function_take -> . TAKE NUMBER sequential_colls
    (49) function_drop -> . DROP NUMBER sequential_colls
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression
    (74) compare_operation -> . GREATERTHAN num_expression num_expression
    (75) compare_operation -> . LESSTHAN num_expression num_expression
    (76) compare_operation -> . GREATERTHANEQUALS num_expression num_expression
    (77) compare_operation -> . LESSTHANEQUALS num_expression num_expression
    (78) compare_operation -> . EQUAL num_expression num_expression
    (79) compare_operation -> . NOTEQUAL num_expression num_expression

    FUNCTION_PRINTLN shift and go to state 8
    READLINE        shift and go to state 9
    FUNCTION_EMPTY  shift and go to state 10
    TYPE_STR        shift and go to state 11
    FUNCTION_SUB    shift and go to state 12
    FUNCTION_SEQ    shift and go to state 13
    FUNCTION_GET    shift and go to state 14
    FUNCTION_COUNT  shift and go to state 15
    FUNCTION_CONJ   shift and go to state 16
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    TIMES           shift and go to state 31
    DEF             shift and go to state 34
    SET             shift and go to state 35
    TAKE            shift and go to state 36
    DROP            shift and go to state 37
    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42
    GREATERTHAN     shift and go to state 43
    LESSTHAN        shift and go to state 44
    GREATERTHANEQUALS shift and go to state 45
    LESSTHANEQUALS  shift and go to state 46
    EQUAL           shift and go to state 47
    NOTEQUAL        shift and go to state 48

    function                       shift and go to state 107
    general_expression             shift and go to state 108
    math_operation                 shift and go to state 17
    boolean_operation              shift and go to state 18
    variable_expression            shift and go to state 19
    setFunctions_union             shift and go to state 20
    setFunctions_intersection      shift and go to state 21
    setFunctions_difference        shift and go to state 22
    function_take                  shift and go to state 23
    function_drop                  shift and go to state 24
    bool_operation                 shift and go to state 32
    compare_operation              shift and go to state 33

state 52

    (10) function -> FUNCTION_PRINTLN multipleObjects .

    RPAREN          reduce using rule 10 (function -> FUNCTION_PRINTLN multipleObjects .)


state 53

    (22) multipleObjects -> value .
    (23) multipleObjects -> value . multipleObjects
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    RPAREN          reduce using rule 22 (multipleObjects -> value .)
    RBRACKET        reduce using rule 22 (multipleObjects -> value .)
    RCURLYBRA       reduce using rule 22 (multipleObjects -> value .)
    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    value                          shift and go to state 53
    multipleObjects                shift and go to state 109
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 54

    (24) multipleObjects -> sequential_colls .
    (25) multipleObjects -> sequential_colls . multipleObjects
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    RPAREN          reduce using rule 24 (multipleObjects -> sequential_colls .)
    RBRACKET        reduce using rule 24 (multipleObjects -> sequential_colls .)
    RCURLYBRA       reduce using rule 24 (multipleObjects -> sequential_colls .)
    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 54
    multipleObjects                shift and go to state 110
    value                          shift and go to state 53
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 55

    (26) value -> STRING .

    STRING          reduce using rule 26 (value -> STRING .)
    NUMBER          reduce using rule 26 (value -> STRING .)
    FLOAT           reduce using rule 26 (value -> STRING .)
    BOOLEAN_TRUE    reduce using rule 26 (value -> STRING .)
    BOOLEAN_FALSE   reduce using rule 26 (value -> STRING .)
    NULL            reduce using rule 26 (value -> STRING .)
    ID              reduce using rule 26 (value -> STRING .)
    LBRACKET        reduce using rule 26 (value -> STRING .)
    LPAREN          reduce using rule 26 (value -> STRING .)
    SETDEF          reduce using rule 26 (value -> STRING .)
    APOSTROPHE      reduce using rule 26 (value -> STRING .)
    RPAREN          reduce using rule 26 (value -> STRING .)
    RBRACKET        reduce using rule 26 (value -> STRING .)
    RCURLYBRA       reduce using rule 26 (value -> STRING .)


state 56

    (27) value -> NUMBER .

    STRING          reduce using rule 27 (value -> NUMBER .)
    NUMBER          reduce using rule 27 (value -> NUMBER .)
    FLOAT           reduce using rule 27 (value -> NUMBER .)
    BOOLEAN_TRUE    reduce using rule 27 (value -> NUMBER .)
    BOOLEAN_FALSE   reduce using rule 27 (value -> NUMBER .)
    NULL            reduce using rule 27 (value -> NUMBER .)
    ID              reduce using rule 27 (value -> NUMBER .)
    LBRACKET        reduce using rule 27 (value -> NUMBER .)
    LPAREN          reduce using rule 27 (value -> NUMBER .)
    SETDEF          reduce using rule 27 (value -> NUMBER .)
    APOSTROPHE      reduce using rule 27 (value -> NUMBER .)
    RPAREN          reduce using rule 27 (value -> NUMBER .)
    RBRACKET        reduce using rule 27 (value -> NUMBER .)
    RCURLYBRA       reduce using rule 27 (value -> NUMBER .)


state 57

    (28) value -> FLOAT .

    STRING          reduce using rule 28 (value -> FLOAT .)
    NUMBER          reduce using rule 28 (value -> FLOAT .)
    FLOAT           reduce using rule 28 (value -> FLOAT .)
    BOOLEAN_TRUE    reduce using rule 28 (value -> FLOAT .)
    BOOLEAN_FALSE   reduce using rule 28 (value -> FLOAT .)
    NULL            reduce using rule 28 (value -> FLOAT .)
    ID              reduce using rule 28 (value -> FLOAT .)
    LBRACKET        reduce using rule 28 (value -> FLOAT .)
    LPAREN          reduce using rule 28 (value -> FLOAT .)
    SETDEF          reduce using rule 28 (value -> FLOAT .)
    APOSTROPHE      reduce using rule 28 (value -> FLOAT .)
    RPAREN          reduce using rule 28 (value -> FLOAT .)
    RBRACKET        reduce using rule 28 (value -> FLOAT .)
    RCURLYBRA       reduce using rule 28 (value -> FLOAT .)


state 58

    (29) value -> BOOLEAN_TRUE .

    STRING          reduce using rule 29 (value -> BOOLEAN_TRUE .)
    NUMBER          reduce using rule 29 (value -> BOOLEAN_TRUE .)
    FLOAT           reduce using rule 29 (value -> BOOLEAN_TRUE .)
    BOOLEAN_TRUE    reduce using rule 29 (value -> BOOLEAN_TRUE .)
    BOOLEAN_FALSE   reduce using rule 29 (value -> BOOLEAN_TRUE .)
    NULL            reduce using rule 29 (value -> BOOLEAN_TRUE .)
    ID              reduce using rule 29 (value -> BOOLEAN_TRUE .)
    LBRACKET        reduce using rule 29 (value -> BOOLEAN_TRUE .)
    LPAREN          reduce using rule 29 (value -> BOOLEAN_TRUE .)
    SETDEF          reduce using rule 29 (value -> BOOLEAN_TRUE .)
    APOSTROPHE      reduce using rule 29 (value -> BOOLEAN_TRUE .)
    RPAREN          reduce using rule 29 (value -> BOOLEAN_TRUE .)
    RBRACKET        reduce using rule 29 (value -> BOOLEAN_TRUE .)
    RCURLYBRA       reduce using rule 29 (value -> BOOLEAN_TRUE .)


state 59

    (30) value -> BOOLEAN_FALSE .

    STRING          reduce using rule 30 (value -> BOOLEAN_FALSE .)
    NUMBER          reduce using rule 30 (value -> BOOLEAN_FALSE .)
    FLOAT           reduce using rule 30 (value -> BOOLEAN_FALSE .)
    BOOLEAN_TRUE    reduce using rule 30 (value -> BOOLEAN_FALSE .)
    BOOLEAN_FALSE   reduce using rule 30 (value -> BOOLEAN_FALSE .)
    NULL            reduce using rule 30 (value -> BOOLEAN_FALSE .)
    ID              reduce using rule 30 (value -> BOOLEAN_FALSE .)
    LBRACKET        reduce using rule 30 (value -> BOOLEAN_FALSE .)
    LPAREN          reduce using rule 30 (value -> BOOLEAN_FALSE .)
    SETDEF          reduce using rule 30 (value -> BOOLEAN_FALSE .)
    APOSTROPHE      reduce using rule 30 (value -> BOOLEAN_FALSE .)
    RPAREN          reduce using rule 30 (value -> BOOLEAN_FALSE .)
    RBRACKET        reduce using rule 30 (value -> BOOLEAN_FALSE .)
    RCURLYBRA       reduce using rule 30 (value -> BOOLEAN_FALSE .)


state 60

    (31) value -> NULL .

    STRING          reduce using rule 31 (value -> NULL .)
    NUMBER          reduce using rule 31 (value -> NULL .)
    FLOAT           reduce using rule 31 (value -> NULL .)
    BOOLEAN_TRUE    reduce using rule 31 (value -> NULL .)
    BOOLEAN_FALSE   reduce using rule 31 (value -> NULL .)
    NULL            reduce using rule 31 (value -> NULL .)
    ID              reduce using rule 31 (value -> NULL .)
    LBRACKET        reduce using rule 31 (value -> NULL .)
    LPAREN          reduce using rule 31 (value -> NULL .)
    SETDEF          reduce using rule 31 (value -> NULL .)
    APOSTROPHE      reduce using rule 31 (value -> NULL .)
    RPAREN          reduce using rule 31 (value -> NULL .)
    RBRACKET        reduce using rule 31 (value -> NULL .)
    RCURLYBRA       reduce using rule 31 (value -> NULL .)


state 61

    (39) sequential_colls -> vector .

    STRING          reduce using rule 39 (sequential_colls -> vector .)
    NUMBER          reduce using rule 39 (sequential_colls -> vector .)
    FLOAT           reduce using rule 39 (sequential_colls -> vector .)
    BOOLEAN_TRUE    reduce using rule 39 (sequential_colls -> vector .)
    BOOLEAN_FALSE   reduce using rule 39 (sequential_colls -> vector .)
    NULL            reduce using rule 39 (sequential_colls -> vector .)
    ID              reduce using rule 39 (sequential_colls -> vector .)
    LBRACKET        reduce using rule 39 (sequential_colls -> vector .)
    LPAREN          reduce using rule 39 (sequential_colls -> vector .)
    SETDEF          reduce using rule 39 (sequential_colls -> vector .)
    APOSTROPHE      reduce using rule 39 (sequential_colls -> vector .)
    RPAREN          reduce using rule 39 (sequential_colls -> vector .)
    RBRACKET        reduce using rule 39 (sequential_colls -> vector .)
    RCURLYBRA       reduce using rule 39 (sequential_colls -> vector .)


state 62

    (40) sequential_colls -> set .

    STRING          reduce using rule 40 (sequential_colls -> set .)
    NUMBER          reduce using rule 40 (sequential_colls -> set .)
    FLOAT           reduce using rule 40 (sequential_colls -> set .)
    BOOLEAN_TRUE    reduce using rule 40 (sequential_colls -> set .)
    BOOLEAN_FALSE   reduce using rule 40 (sequential_colls -> set .)
    NULL            reduce using rule 40 (sequential_colls -> set .)
    ID              reduce using rule 40 (sequential_colls -> set .)
    LBRACKET        reduce using rule 40 (sequential_colls -> set .)
    LPAREN          reduce using rule 40 (sequential_colls -> set .)
    SETDEF          reduce using rule 40 (sequential_colls -> set .)
    APOSTROPHE      reduce using rule 40 (sequential_colls -> set .)
    RPAREN          reduce using rule 40 (sequential_colls -> set .)
    RBRACKET        reduce using rule 40 (sequential_colls -> set .)
    RCURLYBRA       reduce using rule 40 (sequential_colls -> set .)


state 63

    (41) sequential_colls -> list .

    STRING          reduce using rule 41 (sequential_colls -> list .)
    NUMBER          reduce using rule 41 (sequential_colls -> list .)
    FLOAT           reduce using rule 41 (sequential_colls -> list .)
    BOOLEAN_TRUE    reduce using rule 41 (sequential_colls -> list .)
    BOOLEAN_FALSE   reduce using rule 41 (sequential_colls -> list .)
    NULL            reduce using rule 41 (sequential_colls -> list .)
    ID              reduce using rule 41 (sequential_colls -> list .)
    LBRACKET        reduce using rule 41 (sequential_colls -> list .)
    LPAREN          reduce using rule 41 (sequential_colls -> list .)
    SETDEF          reduce using rule 41 (sequential_colls -> list .)
    APOSTROPHE      reduce using rule 41 (sequential_colls -> list .)
    RPAREN          reduce using rule 41 (sequential_colls -> list .)
    RBRACKET        reduce using rule 41 (sequential_colls -> list .)
    RCURLYBRA       reduce using rule 41 (sequential_colls -> list .)


state 64

    (42) sequential_colls -> ID .

    STRING          reduce using rule 42 (sequential_colls -> ID .)
    NUMBER          reduce using rule 42 (sequential_colls -> ID .)
    FLOAT           reduce using rule 42 (sequential_colls -> ID .)
    BOOLEAN_TRUE    reduce using rule 42 (sequential_colls -> ID .)
    BOOLEAN_FALSE   reduce using rule 42 (sequential_colls -> ID .)
    NULL            reduce using rule 42 (sequential_colls -> ID .)
    ID              reduce using rule 42 (sequential_colls -> ID .)
    LBRACKET        reduce using rule 42 (sequential_colls -> ID .)
    LPAREN          reduce using rule 42 (sequential_colls -> ID .)
    SETDEF          reduce using rule 42 (sequential_colls -> ID .)
    APOSTROPHE      reduce using rule 42 (sequential_colls -> ID .)
    RPAREN          reduce using rule 42 (sequential_colls -> ID .)
    RBRACKET        reduce using rule 42 (sequential_colls -> ID .)
    RCURLYBRA       reduce using rule 42 (sequential_colls -> ID .)


state 65

    (32) vector -> LBRACKET . multipleObjects RBRACKET
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 111
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 66

    (33) vector -> LPAREN . VECTOR multipleObjects RPAREN
    (44) set -> LPAREN . SET multipleObjects RPAREN
    (38) list -> LPAREN . LIST multipleObjects RPAREN

    VECTOR          shift and go to state 112
    SET             shift and go to state 113
    LIST            shift and go to state 114


state 67

    (43) set -> SETDEF . LCURLYBRA multipleObjects RCURLYBRA

    LCURLYBRA       shift and go to state 115


state 68

    (37) list -> APOSTROPHE . LPAREN multipleObjects RPAREN

    LPAREN          shift and go to state 116


state 69

    (12) function -> FUNCTION_EMPTY STRING .

    RPAREN          reduce using rule 12 (function -> FUNCTION_EMPTY STRING .)


state 70

    (17) function -> TYPE_STR multiplestring .

    RPAREN          reduce using rule 17 (function -> TYPE_STR multiplestring .)


state 71

    (13) multiplestring -> STRING .
    (14) multiplestring -> STRING . multiplestring
    (13) multiplestring -> . STRING
    (14) multiplestring -> . STRING multiplestring
    (15) multiplestring -> . stament
    (16) multiplestring -> . stament multiplestring
    (1) stament -> . LPAREN compute RPAREN

    RPAREN          reduce using rule 13 (multiplestring -> STRING .)
    STRING          shift and go to state 71
    LPAREN          shift and go to state 2

    multiplestring                 shift and go to state 117
    stament                        shift and go to state 72

state 72

    (15) multiplestring -> stament .
    (16) multiplestring -> stament . multiplestring
    (13) multiplestring -> . STRING
    (14) multiplestring -> . STRING multiplestring
    (15) multiplestring -> . stament
    (16) multiplestring -> . stament multiplestring
    (1) stament -> . LPAREN compute RPAREN

    RPAREN          reduce using rule 15 (multiplestring -> stament .)
    STRING          shift and go to state 71
    LPAREN          shift and go to state 2

    stament                        shift and go to state 72
    multiplestring                 shift and go to state 118

state 73

    (18) function -> FUNCTION_SUB STRING . NUMBER

    NUMBER          shift and go to state 119


state 74

    (19) function -> FUNCTION_SUB ID . NUMBER

    NUMBER          shift and go to state 120


state 75

    (20) function -> FUNCTION_SEQ STRING .

    RPAREN          reduce using rule 20 (function -> FUNCTION_SEQ STRING .)


state 76

    (21) function -> FUNCTION_SEQ ID .

    RPAREN          reduce using rule 21 (function -> FUNCTION_SEQ ID .)


state 77

    (34) function -> FUNCTION_GET sequential_colls . NUMBER

    NUMBER          shift and go to state 121


state 78

    (35) function -> FUNCTION_COUNT sequential_colls .

    RPAREN          reduce using rule 35 (function -> FUNCTION_COUNT sequential_colls .)


state 79

    (36) function -> FUNCTION_CONJ sequential_colls . multipleObjects
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 54
    multipleObjects                shift and go to state 122
    value                          shift and go to state 53
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 80

    (87) while -> WHILE LPAREN . boolean_operation RPAREN do
    (65) boolean_operation -> . bool_operation
    (66) boolean_operation -> . compare_operation
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression
    (74) compare_operation -> . GREATERTHAN num_expression num_expression
    (75) compare_operation -> . LESSTHAN num_expression num_expression
    (76) compare_operation -> . GREATERTHANEQUALS num_expression num_expression
    (77) compare_operation -> . LESSTHANEQUALS num_expression num_expression
    (78) compare_operation -> . EQUAL num_expression num_expression
    (79) compare_operation -> . NOTEQUAL num_expression num_expression

    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42
    GREATERTHAN     shift and go to state 43
    LESSTHAN        shift and go to state 44
    GREATERTHANEQUALS shift and go to state 45
    LESSTHANEQUALS  shift and go to state 46
    EQUAL           shift and go to state 47
    NOTEQUAL        shift and go to state 48

    boolean_operation              shift and go to state 123
    bool_operation                 shift and go to state 32
    compare_operation              shift and go to state 33

state 81

    (59) math_operation -> PLUS num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 124

state 82

    (58) num_expression -> LPAREN . math_operation RPAREN
    (59) math_operation -> . PLUS num_expression num_expression
    (60) math_operation -> . MINUS num_expression num_expression
    (61) math_operation -> . DIVIDE num_expression num_expression
    (62) math_operation -> . TIMES num_expression num_expression

    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    TIMES           shift and go to state 31

    math_operation                 shift and go to state 125

state 83

    (63) num_expression -> NUMBER .

    LPAREN          reduce using rule 63 (num_expression -> NUMBER .)
    NUMBER          reduce using rule 63 (num_expression -> NUMBER .)
    ID              reduce using rule 63 (num_expression -> NUMBER .)
    RPAREN          reduce using rule 63 (num_expression -> NUMBER .)


state 84

    (64) num_expression -> ID .

    LPAREN          reduce using rule 64 (num_expression -> ID .)
    NUMBER          reduce using rule 64 (num_expression -> ID .)
    ID              reduce using rule 64 (num_expression -> ID .)
    RPAREN          reduce using rule 64 (num_expression -> ID .)


state 85

    (60) math_operation -> MINUS num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 126

state 86

    (61) math_operation -> DIVIDE num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 127

state 87

    (62) math_operation -> TIMES num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 128

state 88

    (80) variable_expression -> DEF ID . value
    (81) variable_expression -> DEF ID . sequential_colls
    (82) variable_expression -> DEF ID . stament
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (1) stament -> . LPAREN compute RPAREN
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LPAREN          shift and go to state 132
    LBRACKET        shift and go to state 65
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    value                          shift and go to state 129
    sequential_colls               shift and go to state 130
    stament                        shift and go to state 131
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 89

    (45) setFunctions_union -> SET DIVIDE . UNION set set
    (47) setFunctions_intersection -> SET DIVIDE . INTERSECTION set set
    (46) setFunctions_difference -> SET DIVIDE . DIFFERENCE set set

    UNION           shift and go to state 133
    INTERSECTION    shift and go to state 134
    DIFFERENCE      shift and go to state 135


state 90

    (48) function_take -> TAKE NUMBER . sequential_colls
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 136
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 91

    (49) function_drop -> DROP NUMBER . sequential_colls
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 137
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 92

    (89) if -> IF LPAREN . boolean_operation RPAREN
    (65) boolean_operation -> . bool_operation
    (66) boolean_operation -> . compare_operation
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression
    (74) compare_operation -> . GREATERTHAN num_expression num_expression
    (75) compare_operation -> . LESSTHAN num_expression num_expression
    (76) compare_operation -> . GREATERTHANEQUALS num_expression num_expression
    (77) compare_operation -> . LESSTHANEQUALS num_expression num_expression
    (78) compare_operation -> . EQUAL num_expression num_expression
    (79) compare_operation -> . NOTEQUAL num_expression num_expression

    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42
    GREATERTHAN     shift and go to state 43
    LESSTHAN        shift and go to state 44
    GREATERTHANEQUALS shift and go to state 45
    LESSTHANEQUALS  shift and go to state 46
    EQUAL           shift and go to state 47
    NOTEQUAL        shift and go to state 48

    boolean_operation              shift and go to state 138
    bool_operation                 shift and go to state 32
    compare_operation              shift and go to state 33

state 93

    (85) for -> FOR LBRACKET . ID sequential_colls RBRACKET
    (86) for -> FOR LBRACKET . ID ID RBRACKET

    ID              shift and go to state 139


state 94

    (68) bool_operation -> AND bool_expression . bool_expression
    (67) bool_expression -> . LPAREN bool_operation RPAREN
    (71) bool_expression -> . BOOLEAN_TRUE
    (72) bool_expression -> . BOOLEAN_FALSE
    (73) bool_expression -> . ID

    LPAREN          shift and go to state 95
    BOOLEAN_TRUE    shift and go to state 96
    BOOLEAN_FALSE   shift and go to state 97
    ID              shift and go to state 98

    bool_expression                shift and go to state 140

state 95

    (67) bool_expression -> LPAREN . bool_operation RPAREN
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression

    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42

    bool_operation                 shift and go to state 141

state 96

    (71) bool_expression -> BOOLEAN_TRUE .

    LPAREN          reduce using rule 71 (bool_expression -> BOOLEAN_TRUE .)
    BOOLEAN_TRUE    reduce using rule 71 (bool_expression -> BOOLEAN_TRUE .)
    BOOLEAN_FALSE   reduce using rule 71 (bool_expression -> BOOLEAN_TRUE .)
    ID              reduce using rule 71 (bool_expression -> BOOLEAN_TRUE .)
    RPAREN          reduce using rule 71 (bool_expression -> BOOLEAN_TRUE .)


state 97

    (72) bool_expression -> BOOLEAN_FALSE .

    LPAREN          reduce using rule 72 (bool_expression -> BOOLEAN_FALSE .)
    BOOLEAN_TRUE    reduce using rule 72 (bool_expression -> BOOLEAN_FALSE .)
    BOOLEAN_FALSE   reduce using rule 72 (bool_expression -> BOOLEAN_FALSE .)
    ID              reduce using rule 72 (bool_expression -> BOOLEAN_FALSE .)
    RPAREN          reduce using rule 72 (bool_expression -> BOOLEAN_FALSE .)


state 98

    (73) bool_expression -> ID .

    LPAREN          reduce using rule 73 (bool_expression -> ID .)
    BOOLEAN_TRUE    reduce using rule 73 (bool_expression -> ID .)
    BOOLEAN_FALSE   reduce using rule 73 (bool_expression -> ID .)
    ID              reduce using rule 73 (bool_expression -> ID .)
    RPAREN          reduce using rule 73 (bool_expression -> ID .)


state 99

    (69) bool_operation -> OR bool_expression . bool_expression
    (67) bool_expression -> . LPAREN bool_operation RPAREN
    (71) bool_expression -> . BOOLEAN_TRUE
    (72) bool_expression -> . BOOLEAN_FALSE
    (73) bool_expression -> . ID

    LPAREN          shift and go to state 95
    BOOLEAN_TRUE    shift and go to state 96
    BOOLEAN_FALSE   shift and go to state 97
    ID              shift and go to state 98

    bool_expression                shift and go to state 142

state 100

    (70) bool_operation -> NOT bool_expression .

    RPAREN          reduce using rule 70 (bool_operation -> NOT bool_expression .)


state 101

    (74) compare_operation -> GREATERTHAN num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 143

state 102

    (75) compare_operation -> LESSTHAN num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 144

state 103

    (76) compare_operation -> GREATERTHANEQUALS num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 145

state 104

    (77) compare_operation -> LESSTHANEQUALS num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 146

state 105

    (78) compare_operation -> EQUAL num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 147

state 106

    (79) compare_operation -> NOTEQUAL num_expression . num_expression
    (58) num_expression -> . LPAREN math_operation RPAREN
    (63) num_expression -> . NUMBER
    (64) num_expression -> . ID

    LPAREN          shift and go to state 82
    NUMBER          shift and go to state 83
    ID              shift and go to state 84

    num_expression                 shift and go to state 148

state 107

    (6) code_block -> LPAREN function . RPAREN
    (8) code_block -> LPAREN function . RPAREN code_block

    RPAREN          shift and go to state 149


state 108

    (7) code_block -> LPAREN general_expression . RPAREN
    (9) code_block -> LPAREN general_expression . RPAREN code_block

    RPAREN          shift and go to state 150


state 109

    (23) multipleObjects -> value multipleObjects .

    RPAREN          reduce using rule 23 (multipleObjects -> value multipleObjects .)
    RBRACKET        reduce using rule 23 (multipleObjects -> value multipleObjects .)
    RCURLYBRA       reduce using rule 23 (multipleObjects -> value multipleObjects .)


state 110

    (25) multipleObjects -> sequential_colls multipleObjects .

    RPAREN          reduce using rule 25 (multipleObjects -> sequential_colls multipleObjects .)
    RBRACKET        reduce using rule 25 (multipleObjects -> sequential_colls multipleObjects .)
    RCURLYBRA       reduce using rule 25 (multipleObjects -> sequential_colls multipleObjects .)


state 111

    (32) vector -> LBRACKET multipleObjects . RBRACKET

    RBRACKET        shift and go to state 151


state 112

    (33) vector -> LPAREN VECTOR . multipleObjects RPAREN
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 152
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 113

    (44) set -> LPAREN SET . multipleObjects RPAREN
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 153
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 114

    (38) list -> LPAREN LIST . multipleObjects RPAREN
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 154
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 115

    (43) set -> SETDEF LCURLYBRA . multipleObjects RCURLYBRA
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 155
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 116

    (37) list -> APOSTROPHE LPAREN . multipleObjects RPAREN
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 156
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 117

    (14) multiplestring -> STRING multiplestring .

    RPAREN          reduce using rule 14 (multiplestring -> STRING multiplestring .)


state 118

    (16) multiplestring -> stament multiplestring .

    RPAREN          reduce using rule 16 (multiplestring -> stament multiplestring .)


state 119

    (18) function -> FUNCTION_SUB STRING NUMBER .

    RPAREN          reduce using rule 18 (function -> FUNCTION_SUB STRING NUMBER .)


state 120

    (19) function -> FUNCTION_SUB ID NUMBER .

    RPAREN          reduce using rule 19 (function -> FUNCTION_SUB ID NUMBER .)


state 121

    (34) function -> FUNCTION_GET sequential_colls NUMBER .

    RPAREN          reduce using rule 34 (function -> FUNCTION_GET sequential_colls NUMBER .)


state 122

    (36) function -> FUNCTION_CONJ sequential_colls multipleObjects .

    RPAREN          reduce using rule 36 (function -> FUNCTION_CONJ sequential_colls multipleObjects .)


state 123

    (87) while -> WHILE LPAREN boolean_operation . RPAREN do

    RPAREN          shift and go to state 157


state 124

    (59) math_operation -> PLUS num_expression num_expression .

    RPAREN          reduce using rule 59 (math_operation -> PLUS num_expression num_expression .)


state 125

    (58) num_expression -> LPAREN math_operation . RPAREN

    RPAREN          shift and go to state 158


state 126

    (60) math_operation -> MINUS num_expression num_expression .

    RPAREN          reduce using rule 60 (math_operation -> MINUS num_expression num_expression .)


state 127

    (61) math_operation -> DIVIDE num_expression num_expression .

    RPAREN          reduce using rule 61 (math_operation -> DIVIDE num_expression num_expression .)


state 128

    (62) math_operation -> TIMES num_expression num_expression .

    RPAREN          reduce using rule 62 (math_operation -> TIMES num_expression num_expression .)


state 129

    (80) variable_expression -> DEF ID value .

    RPAREN          reduce using rule 80 (variable_expression -> DEF ID value .)


state 130

    (81) variable_expression -> DEF ID sequential_colls .

    RPAREN          reduce using rule 81 (variable_expression -> DEF ID sequential_colls .)


state 131

    (82) variable_expression -> DEF ID stament .

    RPAREN          reduce using rule 82 (variable_expression -> DEF ID stament .)


state 132

    (1) stament -> LPAREN . compute RPAREN
    (33) vector -> LPAREN . VECTOR multipleObjects RPAREN
    (44) set -> LPAREN . SET multipleObjects RPAREN
    (38) list -> LPAREN . LIST multipleObjects RPAREN
    (2) compute -> . function
    (3) compute -> . general_expression
    (4) compute -> . control_structure code_block
    (5) compute -> . while
    (10) function -> . FUNCTION_PRINTLN multipleObjects
    (11) function -> . READLINE
    (12) function -> . FUNCTION_EMPTY STRING
    (17) function -> . TYPE_STR multiplestring
    (18) function -> . FUNCTION_SUB STRING NUMBER
    (19) function -> . FUNCTION_SUB ID NUMBER
    (20) function -> . FUNCTION_SEQ STRING
    (21) function -> . FUNCTION_SEQ ID
    (34) function -> . FUNCTION_GET sequential_colls NUMBER
    (35) function -> . FUNCTION_COUNT sequential_colls
    (36) function -> . FUNCTION_CONJ sequential_colls multipleObjects
    (50) general_expression -> . math_operation
    (51) general_expression -> . boolean_operation
    (52) general_expression -> . variable_expression
    (53) general_expression -> . setFunctions_union
    (54) general_expression -> . setFunctions_intersection
    (55) general_expression -> . setFunctions_difference
    (56) general_expression -> . function_take
    (57) general_expression -> . function_drop
    (83) control_structure -> . if
    (84) control_structure -> . for
    (87) while -> . WHILE LPAREN boolean_operation RPAREN do
    (59) math_operation -> . PLUS num_expression num_expression
    (60) math_operation -> . MINUS num_expression num_expression
    (61) math_operation -> . DIVIDE num_expression num_expression
    (62) math_operation -> . TIMES num_expression num_expression
    (65) boolean_operation -> . bool_operation
    (66) boolean_operation -> . compare_operation
    (80) variable_expression -> . DEF ID value
    (81) variable_expression -> . DEF ID sequential_colls
    (82) variable_expression -> . DEF ID stament
    (45) setFunctions_union -> . SET DIVIDE UNION set set
    (47) setFunctions_intersection -> . SET DIVIDE INTERSECTION set set
    (46) setFunctions_difference -> . SET DIVIDE DIFFERENCE set set
    (48) function_take -> . TAKE NUMBER sequential_colls
    (49) function_drop -> . DROP NUMBER sequential_colls
    (89) if -> . IF LPAREN boolean_operation RPAREN
    (85) for -> . FOR LBRACKET ID sequential_colls RBRACKET
    (86) for -> . FOR LBRACKET ID ID RBRACKET
    (68) bool_operation -> . AND bool_expression bool_expression
    (69) bool_operation -> . OR bool_expression bool_expression
    (70) bool_operation -> . NOT bool_expression
    (74) compare_operation -> . GREATERTHAN num_expression num_expression
    (75) compare_operation -> . LESSTHAN num_expression num_expression
    (76) compare_operation -> . GREATERTHANEQUALS num_expression num_expression
    (77) compare_operation -> . LESSTHANEQUALS num_expression num_expression
    (78) compare_operation -> . EQUAL num_expression num_expression
    (79) compare_operation -> . NOTEQUAL num_expression num_expression

    VECTOR          shift and go to state 112
    SET             shift and go to state 159
    LIST            shift and go to state 114
    FUNCTION_PRINTLN shift and go to state 8
    READLINE        shift and go to state 9
    FUNCTION_EMPTY  shift and go to state 10
    TYPE_STR        shift and go to state 11
    FUNCTION_SUB    shift and go to state 12
    FUNCTION_SEQ    shift and go to state 13
    FUNCTION_GET    shift and go to state 14
    FUNCTION_COUNT  shift and go to state 15
    FUNCTION_CONJ   shift and go to state 16
    WHILE           shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    DIVIDE          shift and go to state 30
    TIMES           shift and go to state 31
    DEF             shift and go to state 34
    TAKE            shift and go to state 36
    DROP            shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    NOT             shift and go to state 42
    GREATERTHAN     shift and go to state 43
    LESSTHAN        shift and go to state 44
    GREATERTHANEQUALS shift and go to state 45
    LESSTHANEQUALS  shift and go to state 46
    EQUAL           shift and go to state 47
    NOTEQUAL        shift and go to state 48

    compute                        shift and go to state 3
    function                       shift and go to state 4
    general_expression             shift and go to state 5
    control_structure              shift and go to state 6
    while                          shift and go to state 7
    math_operation                 shift and go to state 17
    boolean_operation              shift and go to state 18
    variable_expression            shift and go to state 19
    setFunctions_union             shift and go to state 20
    setFunctions_intersection      shift and go to state 21
    setFunctions_difference        shift and go to state 22
    function_take                  shift and go to state 23
    function_drop                  shift and go to state 24
    if                             shift and go to state 25
    for                            shift and go to state 26
    bool_operation                 shift and go to state 32
    compare_operation              shift and go to state 33

state 133

    (45) setFunctions_union -> SET DIVIDE UNION . set set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 160

state 134

    (47) setFunctions_intersection -> SET DIVIDE INTERSECTION . set set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 162

state 135

    (46) setFunctions_difference -> SET DIVIDE DIFFERENCE . set set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 163

state 136

    (48) function_take -> TAKE NUMBER sequential_colls .

    RPAREN          reduce using rule 48 (function_take -> TAKE NUMBER sequential_colls .)


state 137

    (49) function_drop -> DROP NUMBER sequential_colls .

    RPAREN          reduce using rule 49 (function_drop -> DROP NUMBER sequential_colls .)


state 138

    (89) if -> IF LPAREN boolean_operation . RPAREN

    RPAREN          shift and go to state 164


state 139

    (85) for -> FOR LBRACKET ID . sequential_colls RBRACKET
    (86) for -> FOR LBRACKET ID . ID RBRACKET
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    ID              shift and go to state 165
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    sequential_colls               shift and go to state 166
    vector                         shift and go to state 61
    set                            shift and go to state 62
    list                           shift and go to state 63

state 140

    (68) bool_operation -> AND bool_expression bool_expression .

    RPAREN          reduce using rule 68 (bool_operation -> AND bool_expression bool_expression .)


state 141

    (67) bool_expression -> LPAREN bool_operation . RPAREN

    RPAREN          shift and go to state 167


state 142

    (69) bool_operation -> OR bool_expression bool_expression .

    RPAREN          reduce using rule 69 (bool_operation -> OR bool_expression bool_expression .)


state 143

    (74) compare_operation -> GREATERTHAN num_expression num_expression .

    RPAREN          reduce using rule 74 (compare_operation -> GREATERTHAN num_expression num_expression .)


state 144

    (75) compare_operation -> LESSTHAN num_expression num_expression .

    RPAREN          reduce using rule 75 (compare_operation -> LESSTHAN num_expression num_expression .)


state 145

    (76) compare_operation -> GREATERTHANEQUALS num_expression num_expression .

    RPAREN          reduce using rule 76 (compare_operation -> GREATERTHANEQUALS num_expression num_expression .)


state 146

    (77) compare_operation -> LESSTHANEQUALS num_expression num_expression .

    RPAREN          reduce using rule 77 (compare_operation -> LESSTHANEQUALS num_expression num_expression .)


state 147

    (78) compare_operation -> EQUAL num_expression num_expression .

    RPAREN          reduce using rule 78 (compare_operation -> EQUAL num_expression num_expression .)


state 148

    (79) compare_operation -> NOTEQUAL num_expression num_expression .

    RPAREN          reduce using rule 79 (compare_operation -> NOTEQUAL num_expression num_expression .)


state 149

    (6) code_block -> LPAREN function RPAREN .
    (8) code_block -> LPAREN function RPAREN . code_block
    (6) code_block -> . LPAREN function RPAREN
    (7) code_block -> . LPAREN general_expression RPAREN
    (8) code_block -> . LPAREN function RPAREN code_block
    (9) code_block -> . LPAREN general_expression RPAREN code_block

    RPAREN          reduce using rule 6 (code_block -> LPAREN function RPAREN .)
    LPAREN          shift and go to state 51

    code_block                     shift and go to state 168

state 150

    (7) code_block -> LPAREN general_expression RPAREN .
    (9) code_block -> LPAREN general_expression RPAREN . code_block
    (6) code_block -> . LPAREN function RPAREN
    (7) code_block -> . LPAREN general_expression RPAREN
    (8) code_block -> . LPAREN function RPAREN code_block
    (9) code_block -> . LPAREN general_expression RPAREN code_block

    RPAREN          reduce using rule 7 (code_block -> LPAREN general_expression RPAREN .)
    LPAREN          shift and go to state 51

    code_block                     shift and go to state 169

state 151

    (32) vector -> LBRACKET multipleObjects RBRACKET .

    STRING          reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    NUMBER          reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    FLOAT           reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    BOOLEAN_TRUE    reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    BOOLEAN_FALSE   reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    NULL            reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    ID              reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    LBRACKET        reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    LPAREN          reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    SETDEF          reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    APOSTROPHE      reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    RPAREN          reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    RBRACKET        reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)
    RCURLYBRA       reduce using rule 32 (vector -> LBRACKET multipleObjects RBRACKET .)


state 152

    (33) vector -> LPAREN VECTOR multipleObjects . RPAREN

    RPAREN          shift and go to state 170


state 153

    (44) set -> LPAREN SET multipleObjects . RPAREN

    RPAREN          shift and go to state 171


state 154

    (38) list -> LPAREN LIST multipleObjects . RPAREN

    RPAREN          shift and go to state 172


state 155

    (43) set -> SETDEF LCURLYBRA multipleObjects . RCURLYBRA

    RCURLYBRA       shift and go to state 173


state 156

    (37) list -> APOSTROPHE LPAREN multipleObjects . RPAREN

    RPAREN          shift and go to state 174


state 157

    (87) while -> WHILE LPAREN boolean_operation RPAREN . do
    (88) do -> . LPAREN DO code_block RPAREN

    LPAREN          shift and go to state 175

    do                             shift and go to state 176

state 158

    (58) num_expression -> LPAREN math_operation RPAREN .

    LPAREN          reduce using rule 58 (num_expression -> LPAREN math_operation RPAREN .)
    NUMBER          reduce using rule 58 (num_expression -> LPAREN math_operation RPAREN .)
    ID              reduce using rule 58 (num_expression -> LPAREN math_operation RPAREN .)
    RPAREN          reduce using rule 58 (num_expression -> LPAREN math_operation RPAREN .)


state 159

    (44) set -> LPAREN SET . multipleObjects RPAREN
    (45) setFunctions_union -> SET . DIVIDE UNION set set
    (47) setFunctions_intersection -> SET . DIVIDE INTERSECTION set set
    (46) setFunctions_difference -> SET . DIVIDE DIFFERENCE set set
    (22) multipleObjects -> . value
    (23) multipleObjects -> . value multipleObjects
    (24) multipleObjects -> . sequential_colls
    (25) multipleObjects -> . sequential_colls multipleObjects
    (26) value -> . STRING
    (27) value -> . NUMBER
    (28) value -> . FLOAT
    (29) value -> . BOOLEAN_TRUE
    (30) value -> . BOOLEAN_FALSE
    (31) value -> . NULL
    (39) sequential_colls -> . vector
    (40) sequential_colls -> . set
    (41) sequential_colls -> . list
    (42) sequential_colls -> . ID
    (32) vector -> . LBRACKET multipleObjects RBRACKET
    (33) vector -> . LPAREN VECTOR multipleObjects RPAREN
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN
    (37) list -> . APOSTROPHE LPAREN multipleObjects RPAREN
    (38) list -> . LPAREN LIST multipleObjects RPAREN

    DIVIDE          shift and go to state 89
    STRING          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    BOOLEAN_TRUE    shift and go to state 58
    BOOLEAN_FALSE   shift and go to state 59
    NULL            shift and go to state 60
    ID              shift and go to state 64
    LBRACKET        shift and go to state 65
    LPAREN          shift and go to state 66
    SETDEF          shift and go to state 67
    APOSTROPHE      shift and go to state 68

    multipleObjects                shift and go to state 153
    set                            shift and go to state 62
    value                          shift and go to state 53
    sequential_colls               shift and go to state 54
    vector                         shift and go to state 61
    list                           shift and go to state 63

state 160

    (45) setFunctions_union -> SET DIVIDE UNION set . set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 177

state 161

    (44) set -> LPAREN . SET multipleObjects RPAREN

    SET             shift and go to state 113


state 162

    (47) setFunctions_intersection -> SET DIVIDE INTERSECTION set . set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 178

state 163

    (46) setFunctions_difference -> SET DIVIDE DIFFERENCE set . set
    (43) set -> . SETDEF LCURLYBRA multipleObjects RCURLYBRA
    (44) set -> . LPAREN SET multipleObjects RPAREN

    SETDEF          shift and go to state 67
    LPAREN          shift and go to state 161

    set                            shift and go to state 179

state 164

    (89) if -> IF LPAREN boolean_operation RPAREN .

    LPAREN          reduce using rule 89 (if -> IF LPAREN boolean_operation RPAREN .)


state 165

    (86) for -> FOR LBRACKET ID ID . RBRACKET
    (42) sequential_colls -> ID .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 180

  ! RBRACKET        [ reduce using rule 42 (sequential_colls -> ID .) ]


state 166

    (85) for -> FOR LBRACKET ID sequential_colls . RBRACKET

    RBRACKET        shift and go to state 181


state 167

    (67) bool_expression -> LPAREN bool_operation RPAREN .

    LPAREN          reduce using rule 67 (bool_expression -> LPAREN bool_operation RPAREN .)
    BOOLEAN_TRUE    reduce using rule 67 (bool_expression -> LPAREN bool_operation RPAREN .)
    BOOLEAN_FALSE   reduce using rule 67 (bool_expression -> LPAREN bool_operation RPAREN .)
    ID              reduce using rule 67 (bool_expression -> LPAREN bool_operation RPAREN .)
    RPAREN          reduce using rule 67 (bool_expression -> LPAREN bool_operation RPAREN .)


state 168

    (8) code_block -> LPAREN function RPAREN code_block .

    RPAREN          reduce using rule 8 (code_block -> LPAREN function RPAREN code_block .)


state 169

    (9) code_block -> LPAREN general_expression RPAREN code_block .

    RPAREN          reduce using rule 9 (code_block -> LPAREN general_expression RPAREN code_block .)


state 170

    (33) vector -> LPAREN VECTOR multipleObjects RPAREN .

    STRING          reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    NUMBER          reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    FLOAT           reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    NULL            reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    ID              reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    LBRACKET        reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    LPAREN          reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    SETDEF          reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    RPAREN          reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    RBRACKET        reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 33 (vector -> LPAREN VECTOR multipleObjects RPAREN .)


state 171

    (44) set -> LPAREN SET multipleObjects RPAREN .

    STRING          reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    NUMBER          reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    FLOAT           reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    NULL            reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    ID              reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    LBRACKET        reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    LPAREN          reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    SETDEF          reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    RPAREN          reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    RBRACKET        reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 44 (set -> LPAREN SET multipleObjects RPAREN .)


state 172

    (38) list -> LPAREN LIST multipleObjects RPAREN .

    STRING          reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    NUMBER          reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    FLOAT           reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    NULL            reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    ID              reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    LBRACKET        reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    LPAREN          reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    SETDEF          reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    RPAREN          reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    RBRACKET        reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 38 (list -> LPAREN LIST multipleObjects RPAREN .)


state 173

    (43) set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .

    STRING          reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    NUMBER          reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    FLOAT           reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    BOOLEAN_TRUE    reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    BOOLEAN_FALSE   reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    NULL            reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    ID              reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    LBRACKET        reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    LPAREN          reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    SETDEF          reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    APOSTROPHE      reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RPAREN          reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RBRACKET        reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)
    RCURLYBRA       reduce using rule 43 (set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA .)


state 174

    (37) list -> APOSTROPHE LPAREN multipleObjects RPAREN .

    STRING          reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    NUMBER          reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    FLOAT           reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    BOOLEAN_TRUE    reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    BOOLEAN_FALSE   reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    NULL            reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    ID              reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    LBRACKET        reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    LPAREN          reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    SETDEF          reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    APOSTROPHE      reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RPAREN          reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RBRACKET        reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)
    RCURLYBRA       reduce using rule 37 (list -> APOSTROPHE LPAREN multipleObjects RPAREN .)


state 175

    (88) do -> LPAREN . DO code_block RPAREN

    DO              shift and go to state 182


state 176

    (87) while -> WHILE LPAREN boolean_operation RPAREN do .

    RPAREN          reduce using rule 87 (while -> WHILE LPAREN boolean_operation RPAREN do .)


state 177

    (45) setFunctions_union -> SET DIVIDE UNION set set .

    RPAREN          reduce using rule 45 (setFunctions_union -> SET DIVIDE UNION set set .)


state 178

    (47) setFunctions_intersection -> SET DIVIDE INTERSECTION set set .

    RPAREN          reduce using rule 47 (setFunctions_intersection -> SET DIVIDE INTERSECTION set set .)


state 179

    (46) setFunctions_difference -> SET DIVIDE DIFFERENCE set set .

    RPAREN          reduce using rule 46 (setFunctions_difference -> SET DIVIDE DIFFERENCE set set .)


state 180

    (86) for -> FOR LBRACKET ID ID RBRACKET .

    LPAREN          reduce using rule 86 (for -> FOR LBRACKET ID ID RBRACKET .)


state 181

    (85) for -> FOR LBRACKET ID sequential_colls RBRACKET .

    LPAREN          reduce using rule 85 (for -> FOR LBRACKET ID sequential_colls RBRACKET .)


state 182

    (88) do -> LPAREN DO . code_block RPAREN
    (6) code_block -> . LPAREN function RPAREN
    (7) code_block -> . LPAREN general_expression RPAREN
    (8) code_block -> . LPAREN function RPAREN code_block
    (9) code_block -> . LPAREN general_expression RPAREN code_block

    LPAREN          shift and go to state 51

    code_block                     shift and go to state 183

state 183

    (88) do -> LPAREN DO code_block . RPAREN

    RPAREN          shift and go to state 184


state 184

    (88) do -> LPAREN DO code_block RPAREN .

    RPAREN          reduce using rule 88 (do -> LPAREN DO code_block RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACKET in state 165 resolved as shift

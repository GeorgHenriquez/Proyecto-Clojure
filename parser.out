Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AT
    DEFN
    DOUBLE_POINT
    ELSE
    EXCLAMATION
    FUNCTION_NTH
    NULL
    PERCENTAJE
    POINT
    QUESTION

Grammar

Rule 0     S' -> stament
Rule 1     stament -> LPAREN compute RPAREN
Rule 2     compute -> function
Rule 3     compute -> general_expression
Rule 4     function -> FUNCTION_PRINTLN multipleObjects
Rule 5     function -> READLINE
Rule 6     function -> FUNCTION_EMPTY STRING
Rule 7     multiplestring -> STRING
Rule 8     multiplestring -> STRING multiplestring
Rule 9     multiplestring -> stament
Rule 10    multiplestring -> stament multiplestring
Rule 11    function -> TYPE_STR multiplestring
Rule 12    function -> FUNCTION_SUB STRING NUMBER
Rule 13    function -> FUNCTION_SUB ID NUMBER
Rule 14    function -> FUNCTION_SEQ STRING
Rule 15    function -> FUNCTION_SEQ ID
Rule 16    multipleObjects -> value
Rule 17    multipleObjects -> value multipleObjects
Rule 18    multipleObjects -> sequential_colls
Rule 19    multipleObjects -> sequential_colls multipleObjects
Rule 20    value -> STRING
Rule 21    value -> NUMBER
Rule 22    value -> FLOAT
Rule 23    value -> BOOLEAN_TRUE
Rule 24    value -> BOOLEAN_FALSE
Rule 25    vector -> LBRACKET multipleObjects RBRACKET
Rule 26    vector -> LPAREN VECTOR multipleObjects RPAREN
Rule 27    function -> FUNCTION_GET sequential_colls NUMBER
Rule 28    function -> FUNCTION_COUNT sequential_colls
Rule 29    function -> FUNCTION_CONJ sequential_colls multipleObjects
Rule 30    list -> APOSTROPHE LPAREN multipleObjects RPAREN
Rule 31    list -> LPAREN LIST multipleObjects RPAREN
Rule 32    sequential_colls -> vector
Rule 33    sequential_colls -> set
Rule 34    sequential_colls -> list
Rule 35    sequential_colls -> ID
Rule 36    set -> SETDEF LCURLYBRA multipleObjects RCURLYBRA
Rule 37    set -> LPAREN SET multipleObjects RPAREN
Rule 38    setFunctions_union -> SET DIVIDE UNION set set
Rule 39    setFunctions_difference -> SET DIVIDE DIFFERENCE set set
Rule 40    setFunctions_intersection -> SET DIVIDE INTERSECTION set set
Rule 41    function_take -> LPAREN TAKE NUMBER sequential_colls
Rule 42    function_drop -> LPAREN DROP NUMBER sequential_colls
Rule 43    general_expression -> math_operation
Rule 44    general_expression -> bool_operation
Rule 45    general_expression -> compare_operation
Rule 46    general_expression -> variable_expression
Rule 47    general_expression -> setFunctions_union
Rule 48    general_expression -> setFunctions_intersection
Rule 49    general_expression -> setFunctions_difference
Rule 50    general_expression -> function_take
Rule 51    general_expression -> function_drop
Rule 52    num_expression -> LPAREN math_operation RPAREN
Rule 53    math_operation -> PLUS num_expression NUMBER
Rule 54    math_operation -> MINUS num_expression NUMBER
Rule 55    math_operation -> DIVIDE num_expression NUMBER
Rule 56    math_operation -> TIMES num_expression NUMBER
Rule 57    num_expression -> NUMBER
Rule 58    bool_expression -> LPAREN bool_operation RPAREN
Rule 59    bool_operation -> AND bool_expression bool_expression
Rule 60    bool_operation -> OR bool_expression bool_expression
Rule 61    bool_operation -> NOT bool_expression
Rule 62    bool_expression -> BOOLEAN_TRUE
Rule 63    bool_expression -> BOOLEAN_FALSE
Rule 64    compare_operation -> GREATERTHAN num_expression num_expression
Rule 65    compare_operation -> LESSTHAN num_expression num_expression
Rule 66    compare_operation -> GREATERTHANEQUALS num_expression num_expression
Rule 67    compare_operation -> LESSTHANEQUALS num_expression num_expression
Rule 68    compare_operation -> EQUAL num_expression num_expression
Rule 69    compare_operation -> NOTEQUAL num_expression num_expression
Rule 70    variable_expression -> DEF ID multipleObjects
Rule 71    for -> LPAREN FOR LBRACKET ID sequential_col RBRACKET general_expression RPAREN
Rule 72    for -> FOR LBRACKET ID ID RBRACKET general_expression RPAREN
Rule 73    while -> LPAREN WHILE LPAREN compare_operation RPAREN LPAREN DO general_expression general_expression RPAREN RPAREN
Rule 74    if -> LPAREN IF LPAREN compare_operation RPAREN LPAREN general_expression general_expression RPAREN

Terminals, with rules where they appear

AND                  : 59
APOSTROPHE           : 30
AT                   : 
BOOLEAN_FALSE        : 24 63
BOOLEAN_TRUE         : 23 62
DEF                  : 70
DEFN                 : 
DIFFERENCE           : 39
DIVIDE               : 38 39 40 55
DO                   : 73
DOUBLE_POINT         : 
DROP                 : 42
ELSE                 : 
EQUAL                : 68
EXCLAMATION          : 
FLOAT                : 22
FOR                  : 71 72
FUNCTION_CONJ        : 29
FUNCTION_COUNT       : 28
FUNCTION_EMPTY       : 6
FUNCTION_GET         : 27
FUNCTION_NTH         : 
FUNCTION_PRINTLN     : 4
FUNCTION_SEQ         : 14 15
FUNCTION_SUB         : 12 13
GREATERTHAN          : 64
GREATERTHANEQUALS    : 66
ID                   : 13 15 35 70 71 72 72
IF                   : 74
INTERSECTION         : 40
LBRACKET             : 25 71 72
LCURLYBRA            : 36
LESSTHAN             : 65
LESSTHANEQUALS       : 67
LIST                 : 31
LPAREN               : 1 26 30 31 37 41 42 52 58 71 73 73 73 74 74 74
MINUS                : 54
NOT                  : 61
NOTEQUAL             : 69
NULL                 : 
NUMBER               : 12 13 21 27 41 42 53 54 55 56 57
OR                   : 60
PERCENTAJE           : 
PLUS                 : 53
POINT                : 
QUESTION             : 
RBRACKET             : 25 71 72
RCURLYBRA            : 36
READLINE             : 5
RPAREN               : 1 26 30 31 37 52 58 71 72 73 73 73 74 74
SET                  : 37 38 39 40
SETDEF               : 36
STRING               : 6 7 8 12 14 20
TAKE                 : 41
TIMES                : 56
TYPE_STR             : 11
UNION                : 38
VECTOR               : 26
WHILE                : 73
error                : 

Nonterminals, with rules where they appear

bool_expression      : 59 59 60 60 61
bool_operation       : 44 58
compare_operation    : 45 73 74
compute              : 1
for                  : 
function             : 2
function_drop        : 51
function_take        : 50
general_expression   : 3 71 72 73 73 74 74
if                   : 
list                 : 34
math_operation       : 43 52
multipleObjects      : 4 17 19 25 26 29 30 31 36 37 70
multiplestring       : 8 10 11
num_expression       : 53 54 55 56 64 64 65 65 66 66 67 67 68 68 69 69
sequential_col       : 71
sequential_colls     : 18 19 27 28 29 41 42
set                  : 33 38 38 39 39 40 40
setFunctions_difference : 49
setFunctions_intersection : 48
setFunctions_union   : 47
stament              : 9 10 0
value                : 16 17
variable_expression  : 46
vector               : 32
while                : 

